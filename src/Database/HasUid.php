<?php

namespace Flamarkt\Core\Database;

use Ramsey\Uuid\Uuid;

/**
 * Configures an Eloquent model to use an auto-filled UID column.
 * In most situations, the UID will be set during the creating event.
 * We also want the attribute to be generated immediately if retrieved on an instance that isn't yet saved,
 * as this is useful when extensions copy the UID of a resource inside a database transaction.
 * We don't use the Flarum default attribute API because it would cause a big performance hit by generating UIDs
 * every time a model is instantiated, no matter new or existing.
 *
 * @property string $uid
 */
trait HasUid
{
    public function generateUidValue(): string
    {
        return Uuid::uuid4()->toString();
    }

    protected static function bootHasUid(): void
    {
        static::creating(function (self $model) {
            // If already generated by getter or manually set by an extension, keep existing value
            if ($model->uid) {
                return;
            }

            $model->uid = $model->generateUidValue();
        });
    }

    public function getUidAttribute($value)
    {
        if ($this->exists || $value) {
            return $value;
        }

        $this->attributes['uid'] = $this->generateUidValue();

        return $this->attributes['uid'];
    }
}
