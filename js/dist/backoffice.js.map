{"version":3,"sources":["webpack://@flamarkt/core/webpack/bootstrap","webpack://@flamarkt/core/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/Component']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/Model']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Button']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Page']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Select']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/extend']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/helpers/highlight']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/helpers/username']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@flamarkt/core/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Navigation']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/Application']\"","webpack://@flamarkt/core/external \"flarum.core.compat['admin/components/SessionDropdown']\"","webpack://@flamarkt/core/external \"flarum.core.compat['admin/components/AdminNav']\"","webpack://@flamarkt/core/external \"flarum.core.compat['admin/components/ExtensionLinkButton']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Placeholder']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/TextEditor']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/utils/classList']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Modal']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/components/Link']\"","webpack://@flamarkt/core/external \"flarum.core.compat['common/resolvers/DefaultResolver']\"","webpack://@flamarkt/core/external \"flarum.core.compat['admin/utils/ExtensionData']\"","webpack://@flamarkt/core/external \"flarum.core.compat['admin/AdminApplication']\"","webpack://@flamarkt/core/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flamarkt/core/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flamarkt/core/./src/backoffice/components/HeaderPrimary.js","webpack://@flamarkt/core/./src/backoffice/components/HeaderSecondary.js","webpack://@flamarkt/core/./src/common/components/ActiveLinkButton.ts","webpack://@flamarkt/core/./src/backoffice/components/BackofficeNav.ts","webpack://@flamarkt/core/./src/backoffice/pages/DashboardPage.ts","webpack://@flamarkt/core/./src/backoffice/components/AbstractList.ts","webpack://@flamarkt/core/./src/backoffice/components/ProductList.ts","webpack://@flamarkt/core/./src/common/states/AbstractListState.ts","webpack://@flamarkt/core/./src/common/states/ProductListState.ts","webpack://@flamarkt/core/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@flamarkt/core/./src/common/components/AbstractSortDropdown.ts","webpack://@flamarkt/core/./src/common/components/ProductSortDropdown.ts","webpack://@flamarkt/core/./src/backoffice/pages/ProductIndexPage.ts","webpack://@flamarkt/core/./src/common/pages/AbstractShowPage.ts","webpack://@flamarkt/core/./src/backoffice/components/SubmitButton.ts","webpack://@flamarkt/core/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@flamarkt/core/./src/backoffice/components/SoftDeleteButton.ts","webpack://@flamarkt/core/./src/backoffice/components/PermanentDeleteButton.ts","webpack://@flamarkt/core/./src/common/components/DecimalInput.ts","webpack://@flamarkt/core/./src/common/components/PriceInput.ts","webpack://@flamarkt/core/./src/backoffice/pages/ProductShowPage.ts","webpack://@flamarkt/core/./src/common/states/OrderListState.ts","webpack://@flamarkt/core/./src/common/components/DecimalLabel.ts","webpack://@flamarkt/core/./src/common/components/PriceLabel.ts","webpack://@flamarkt/core/./src/backoffice/components/OrderList.ts","webpack://@flamarkt/core/./src/common/components/OrderSortDropdown.ts","webpack://@flamarkt/core/./src/backoffice/pages/OrderIndexPage.ts","webpack://@flamarkt/core/./src/common/components/Sortable.ts","webpack://@flamarkt/core/./src/common/components/SortableHandle.ts","webpack://@flamarkt/core/./src/common/utils/KeyboardNavigatable.ts","webpack://@flamarkt/core/./src/backoffice/components/AbstractRelationshipSelect.ts","webpack://@flamarkt/core/./src/backoffice/components/ProductRelationshipSelect.ts","webpack://@flamarkt/core/./src/common/components/QuantityInput.ts","webpack://@flamarkt/core/./src/backoffice/components/OrderLineEdit.ts","webpack://@flamarkt/core/./src/backoffice/components/UserRelationshipSelect.ts","webpack://@flamarkt/core/./src/backoffice/states/OrderLineEditState.ts","webpack://@flamarkt/core/./src/backoffice/components/EditPaymentModal.ts","webpack://@flamarkt/core/./src/backoffice/components/PaymentList.ts","webpack://@flamarkt/core/./src/backoffice/states/PaymentListPassthroughState.ts","webpack://@flamarkt/core/./src/backoffice/pages/OrderShowPage.ts","webpack://@flamarkt/core/./src/backoffice/states/UserListState.ts","webpack://@flamarkt/core/./src/backoffice/components/UserList.ts","webpack://@flamarkt/core/./src/backoffice/components/UserSortDropdown.ts","webpack://@flamarkt/core/./src/backoffice/pages/UserIndexPage.ts","webpack://@flamarkt/core/./src/backoffice/pages/UserShowPage.ts","webpack://@flamarkt/core/./src/backoffice/resolvers/ExtensionPageResolver.ts","webpack://@flamarkt/core/./src/backoffice/routes.ts","webpack://@flamarkt/core/./src/backoffice/BackofficeApplication.ts","webpack://@flamarkt/core/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@flamarkt/core/./src/common/models/Model.ts","webpack://@flamarkt/core/./src/common/models/Order.ts","webpack://@flamarkt/core/./src/common/models/OrderLine.ts","webpack://@flamarkt/core/./src/common/models/Payment.ts","webpack://@flamarkt/core/./src/common/models/Product.ts","webpack://@flamarkt/core/./src/common/compat.js","webpack://@flamarkt/core/./src/common/components/QuantityLabel.ts","webpack://@flamarkt/core/./src/common/helpers/formatPrice.ts","webpack://@flamarkt/core/./src/common/models/Cart.ts","webpack://@flamarkt/core/./src/backoffice/compat.js","webpack://@flamarkt/core/./src/backoffice/components/OrderRelationshipSelect.ts","webpack://@flamarkt/core/./src/backoffice/index.ts","webpack://@flamarkt/core/./src/backoffice/registerSettings.ts","webpack://@flamarkt/core/./src/backoffice/hideSettingsAndPermissionsIfNotAdmin.ts","webpack://@flamarkt/core/./src/common/patchModelHasOneNull.ts","webpack://@flamarkt/core/./src/common/patchStoreAllowVerbatimRelationships.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","HeaderPrimary","view","className","listItems","this","items","toArray","config","isInitialized","context","retain","ItemList","Component","HeaderSecondary","add","href","icon","external","target","app","translator","trans","SessionDropdown","component","ActiveLinkButton","isActive","attrs","route","activeRoutes","some","routeName","currentRouteName","current","data","matchAllIndex","indexOf","substr","LinkButton","BackofficeNav","query","oninit","vnode","type","oninput","event","placeholder","extensions","keys","forEach","id","extension","extra","showInBackoffice","push","extensionItems","map","toUpperCase","title","includes","description","ExtensionLinkButton","extensionId","AdminNav","DashboardPage","Page","AbstractList","state","concat","pages","page","topRow","bottomRowContent","loading","LoadingIndicator","moreResults","Button","onclick","loadMore","length","Placeholder","text","bottomRow","content","colspan","head","model","row","columns","rowAttrs","actions","ProductList","product","number","links","AbstractListState","params","limit","requestParams","filter","sort","include","q","clear","redraw","refresh","deferClear","loadResults","then","results","parseResults","offset","preloaded","preloadedApiDocument","Promise","resolve","store","find","nextPageNumber","payload","next","remove","index","splice","unshift","ProductListState","_extends","assign","arguments","source","apply","AbstractSortDropdown","options","activeSort","Dropdown","buttonClassName","label","active","applySort","defaultSort","param","updateUrl","set","ProductSortDropdown","ProductIndexPage","initState","setTitle","setTitleCount","AbstractShowPage","load","newRecord","show","Model","findType","saveThroughNewRecord","attributes","record","pushData","exists","save","reject","SubmitButton","dirty","excluded","sourceKeys","Array","isArray","children","a","disabled","SoftDeleteButton","saving","isHidden","error","PermanentDeleteButton","confirm","afterdelete","DecimalInput","decimals","min","max","step","fromIntegerValue","Math","pow","toIntegerValue","round","inputAttrs","onchange","parseFloat","PriceInput","forum","attribute","ProductShowPage","price","availabilityDriver","priceDriver","composer","editor","createRecord","priceEdit","onsubmit","fields","TextEditor","Select","availabilityDriverOptions","priceDriverOptions","_default","driver","preventDefault","OrderListState","DecimalLabel","toFixed","PriceLabel","OrderList","order","humanTime","createdAt","username","user","priceTotal","paidAmount","productCount","OrderSortDropdown","OrderIndexPage","pageParams","Sortable","sortingIndex","showPlaceholderForIndex","dragoverenterhandler","drophandler","oncreate","stopPropagation","dataTransfer","dropEffect","targetIndex","dom","childNodes","element","parseInt","dataset","isNaN","position","getBoundingClientRect","direction","width","middleX","left","pageX","window","scrollX","height","middleY","top","pageY","scrollY","document","addEventListener","origin","destination","onsort","onremove","removeEventListener","style","display","ondragstart","handleClassName","classList","contains","from","elem","effectAllowed","setData","setDragImage","containerTag","placeholderTag","SortableHandle","draggable","elementTag","KeyboardNavigatable","callbacks","Map","whenCallback","onUp","callback","e","onDown","onSelect","handler","onCancel","onRemove","selectionStart","selectionEnd","when","bindTo","$element","on","navigate","keyCallback","which","AbstractRelationshipSelect","searchFilter","debouncedSearchFilter","searchDebouncer","activeListIndex","inputIsFocused","navigator","dropdownIsFocused","onmousedown","normalizedValue","relationship","setValue","models","hasOne","setIndex","select","toggleModel","dropdown","querySelector","indexInSelectedModels","findIndex","addModel","removeModel","formItems","listAvailableModels","inputItems","onready","item","clearTimeout","setTimeout","search","onkeydown","onfocus","oninputfocus","onblur","oninputblur","listAvailableModel","selected","onmouseover","getDomElement","dispatchEvent","Event","$","scrollToItem","$dropdown","indexLength","$item","scrollTop","dropdownScroll","dropdownTop","dropdownBottom","outerHeight","itemTop","itemBottom","css","stop","animate","first","focus","ProductRelationshipSelect","resultsCache","toLowerCase","all","arr","lastIndexOf","b","localeCompare","highlight","QuantityInput","OrderLineEdit","line","control","sortable","group","_none","shipping","manual","priceUnit","updateTotal","quantity","showInfoProduct","showInfoLabel","showInfoComment","comment","UserRelationshipSelect","displayName","avatar","undefined","uniqueKey","OrderLineEditState","uniqueFormKey","init","relationships","getIdentifier","EditPaymentModal","payment","method","identifier","amount","modal","close","loaded","Modal","PaymentList","PaymentListPassthroughState","payments","OrderShowPage","lines","newLine","initNewLine","initLineState","readonly","tableHead","verbatim","UserListState","UserList","email","Link","buildQueryString","slug","flamarktOrderCount","UserSortDropdown","UserIndexPage","UserShowPage","password","session","ExtensionPageResolver","onmatch","args","requestedPath","extensionPage","extensionData","getPage","DefaultResolver","BackofficeApplication","ExtensionData","history","canGoBack","getPrevious","backUrl","back","location","routes","dashboard","path","ExtensionPage","resolverClass","self","ReferenceError","mount","defaultRoute","defaultAction","prefix","getElementById","Navigation","drawer","getRequiredPermissions","permission","AdminApplication","Application","transform","OriginalModel","hasMany","Order","transformDate","apiEndpoint","OrderLine","Payment","Product","descriptionHtml","cartQuantity","canOrder","canEdit","cartPriceTotalLocal","common","products","priceTotalLocal","reduce","total","backoffice","initializers","users","registerSetting","setting","registerPermission","allowGuest","override","original","getSettings"],"mappings":"+CACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,yC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,+B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCn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","file":"backoffice.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['common/helpers/highlight'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['common/components/Navigation'];","module.exports = flarum.core.compat['common/Application'];","module.exports = flarum.core.compat['admin/components/SessionDropdown'];","module.exports = flarum.core.compat['admin/components/AdminNav'];","module.exports = flarum.core.compat['admin/components/ExtensionLinkButton'];","module.exports = flarum.core.compat['common/components/Placeholder'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/components/TextEditor'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/utils/classList'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/resolvers/DefaultResolver'];","module.exports = flarum.core.compat['admin/utils/ExtensionData'];","module.exports = flarum.core.compat['admin/AdminApplication'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Component from 'flarum/common/Component';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\n\n/**\n * The `HeaderPrimary` component displays primary header controls. On the\n * default skin, these are shown just to the right of the forum title.\n */\nexport default class HeaderPrimary extends Component {\n    view() {\n        return <ul className=\"Header-controls\">{listItems(this.items().toArray())}</ul>;\n    }\n\n    config(isInitialized, context) {\n        // Since this component is 'above' the content of the page (that is, it is a\n        // part of the global UI that persists between routes), we will flag the DOM\n        // to be retained across route changes.\n        context.retain = true;\n    }\n\n    /**\n     * Build an item list for the controls.\n     *\n     * @return {ItemList}\n     */\n    items() {\n        return new ItemList();\n    }\n}\n","import Component from 'flarum/common/Component';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport SessionDropdown from 'flarum/admin/components/SessionDropdown';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\n\n/**\n * The `HeaderSecondary` component displays secondary header controls.\n */\nexport default class HeaderSecondary extends Component {\n    view() {\n        return <ul className=\"Header-controls\">{listItems(this.items().toArray())}</ul>;\n    }\n\n    /**\n     * Build an item list for the controls.\n     *\n     * @return {ItemList}\n     */\n    items() {\n        const items = new ItemList();\n\n        items.add(\n            'help',\n            <LinkButton href=\"https://docs.flarum.org/troubleshoot.html\" icon=\"fas fa-question-circle\" external={true}\n                        target=\"_blank\">\n                {app.translator.trans('core.admin.header.get_help')}\n            </LinkButton>\n        );\n\n        items.add('session', SessionDropdown.component());\n\n        return items;\n    }\n}\n","import {ComponentAttrs} from 'flarum/common/Component';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\ninterface ActiveLinkButtonAttrs extends ComponentAttrs {\n    href: string\n    activeRoutes?: string[]\n}\n\n/**\n * A modified LinkButton that accepts a new activeRoutes attr that defines on which routes\n * the button should be rendered as active.\n * The attribute is an array of strings. The strings can optionally be terminated with *\n * to match all routes with the prefix.\n */\n// @ts-ignore view method not type-hinted\nexport default class ActiveLinkButton extends LinkButton {\n    static isActive(attrs: ActiveLinkButtonAttrs) {\n        return m.route.get() === attrs.href || ActiveLinkButton.activeRoutes(attrs).some(routeName => {\n            const currentRouteName = (app.current.data as any).routeName;\n\n            // In the admin panel, this is called before a first page sets routeName apparently\n            if (!currentRouteName) {\n                return false;\n            }\n\n            const matchAllIndex = routeName.indexOf('*');\n\n            if (matchAllIndex !== -1) {\n                // We always assume that * is at the end, and use everything up to that point as the string\n                return currentRouteName.indexOf(routeName.substr(0, matchAllIndex)) === 0;\n            }\n\n            return currentRouteName === routeName;\n        });\n    }\n\n    static activeRoutes(attrs: ActiveLinkButtonAttrs): string[] {\n        if (attrs.activeRoutes) {\n            return attrs.activeRoutes;\n        }\n\n        return [];\n    }\n}\n","import AdminNav from 'flarum/admin/components/AdminNav';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport ExtensionLinkButton from 'flarum/admin/components/ExtensionLinkButton';\nimport ActiveLinkButton from '../../common/components/ActiveLinkButton';\n\n// @ts-ignore\nexport default class BackofficeNav extends AdminNav {\n    // @ts-ignore\n    query: string = '';\n\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.query = '';\n    }\n\n    items() {\n        const items = new ItemList();\n\n        items.add('dashboard', LinkButton.component({\n            href: app.route('dashboard'),\n            icon: 'far fa-chart-bar',\n        }, app.translator.trans('flamarkt-core.backoffice.nav.dashboard')), 80);\n\n        items.add('users', ActiveLinkButton.component({\n            href: app.route('users.index'),\n            icon: 'fas fa-user',\n            activeRoutes: [\n                'users.*',\n            ],\n        }, app.translator.trans('flamarkt-core.backoffice.nav.users')), 60);\n\n        items.add('products', ActiveLinkButton.component({\n            href: app.route('products.index'),\n            icon: 'fas fa-box',\n            activeRoutes: [\n                'products.*',\n            ],\n        }, app.translator.trans('flamarkt-core.backoffice.nav.products')), 40);\n\n        items.add('orders', ActiveLinkButton.component({\n            href: app.route('orders.index'),\n            icon: 'fas fa-shopping-cart',\n            activeRoutes: [\n                'orders.*',\n            ],\n        }, app.translator.trans('flamarkt-core.backoffice.nav.orders')), 20);\n\n        items.add('search', m('.Search-input', m('input.FormControl.SearchBar', {\n            type: 'search',\n            value: this.query,\n            oninput: event => {\n                this.query = event.target.value;\n            },\n            placeholder: app.translator.trans('flamarkt-core.backoffice.nav.searchPlaceholder')\n        })), -10);\n\n        return items;\n    }\n\n    extensions() {\n        let extensions: any[] = [];\n\n        Object.keys(app.data.extensions).forEach((id) => {\n            const extension = app.data.extensions[id];\n\n            if (!extension.extra['flamarkt-backoffice'] || !extension.extra['flamarkt-backoffice'].showInBackoffice) {\n                return;\n            }\n\n            extensions.push(extension);\n        });\n\n        return extensions;\n    }\n\n    extensionItems() {\n        const items = new ItemList();\n\n        this.extensions().map((extension) => {\n            const query = this.query.toUpperCase();\n            const title = extension.extra['flarum-extension'].title;\n\n            if (!query || title.toUpperCase().includes(query) || extension.description.toUpperCase().includes(query)) {\n                items.add(`extension-${extension.id}`, ExtensionLinkButton.component({\n                    href: app.route('extension', {id: extension.id}),\n                    extensionId: extension.id,\n                    className: 'ExtensionNavButton',\n                    title: extension.description\n                }, title));\n            }\n        });\n\n        return items;\n    }\n}\n","import Page from 'flarum/common/components/Page';\n\nexport default class DashboardPage extends Page {\n    view() {\n        return m('.DashboardPage', m('.container', m('p', 'Hello World')));\n    }\n}\n","import {Vnode} from 'mithril';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Button from 'flarum/common/components/Button';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport Model from 'flarum/common/Model';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport AbstractListState from '../../common/states/AbstractListState';\n\ninterface AbstractListAttrs<T extends Model> extends ComponentAttrs {\n    state: AbstractListState<T>\n}\n\nexport default class AbstractList<T extends Model> extends Component<AbstractListAttrs<T>> {\n    items(state: AbstractListState<T>): T[] {\n        return ([] as T[]).concat(...state.pages.map(page => page.items));\n    }\n\n    topRow(state: AbstractListState<T>) {\n        return null;\n    }\n\n    bottomRowContent(state: AbstractListState<T>) {\n        if (state.loading) {\n            return LoadingIndicator.component();\n        } else if (state.moreResults) {\n            return Button.component({\n                className: 'Button',\n                onclick: state.loadMore.bind(state),\n            }, app.translator.trans('load-more'));\n        }\n\n        if (state.pages.length === 0 && !state.loading) {\n            return Placeholder.component({\n                text: app.translator.trans('empty'),\n            });\n        }\n    }\n\n    bottomRow(state: AbstractListState<T>) {\n        const content = this.bottomRowContent(state);\n\n        return content ? m('tr', m('td', {\n            colspan: 100,\n        }, content)) : null;\n    }\n\n    view(vnode: Vnode<AbstractListAttrs<T>>) {\n        const {state} = vnode.attrs;\n\n        return m('table.Table', [\n            m('thead', m('tr', this.head().toArray())),\n            m('tbody', [\n                this.topRow(state),\n                this.items(state).map(model => this.row(model)),\n                this.bottomRow(state),\n            ]),\n        ]);\n    }\n\n    head(): ItemList {\n        const columns = new ItemList();\n\n        columns.add('actions', m('th', 'Actions'), -100);//TODO\n\n        return columns;\n    }\n\n    row(model: T) {\n        return m('tr', this.rowAttrs(model), this.columns(model).toArray());\n    }\n\n    rowAttrs(model: T): any {\n        return {};\n    }\n\n    columns(model: T): ItemList {\n        const columns = new ItemList();\n\n        columns.add('actions', m('td', m('ul.Table-actions', listItems(this.actions(model).toArray()))), -100);\n\n        return columns;\n    }\n\n    actions(model: T): ItemList {\n        return new ItemList();\n    }\n}\n","import LinkButton from 'flarum/common/components/LinkButton';\nimport AbstractList from './AbstractList';\nimport Product from '../../common/models/Product';\n\nexport default class ProductList extends AbstractList<Product> {\n    head() {\n        const columns = super.head();\n\n        columns.add('title', m('th', app.translator.trans('flamarkt-core.backoffice.products.head.title')), 10);\n\n        return columns;\n    }\n\n    columns(product: Product) {\n        const columns = super.columns(product);\n\n        columns.add('title', m('td', product.title()), 10);\n\n        return columns;\n    }\n\n    actions(product: Product) {\n        const actions = super.actions(product);\n\n        actions.add('edit', LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-pen',\n            href: app.route.product(product),\n        }));\n\n        return actions;\n    }\n}\n","import Model from 'flarum/common/Model';\n\nexport class Page<T extends Model> {\n    number: number;\n    items: T[];\n    links: any;\n\n    constructor(number: number, items: T[], links: any = {}) {\n        this.number = number;\n        this.items = items;\n        this.links = links || {};\n    }\n}\n\nexport default class AbstractListState<T extends Model> {\n    params: any = {};\n    pages: Page<T>[] = [];\n    loading: boolean = true;\n    moreResults: boolean = false;\n\n    constructor(params: any = {}) {\n        this.params = params;\n    }\n\n    type(): string {\n        return '';\n    }\n\n    limit(): number {\n        return 20;\n    }\n\n    requestParams() {\n        const params: any = {filter: this.params.filter || {}};\n\n        if (this.params.sort) {\n            params.sort = this.params.sort;\n        }\n\n        if (this.params.include) {\n            params.include = this.params.include;\n        }\n\n        if (this.params.q) {\n            params.filter.q = this.params.q;\n        }\n\n        return params;\n    }\n\n    clear() {\n        this.pages = [];\n        m.redraw();\n    }\n\n    refresh({deferClear = false} = {}) {\n        this.loading = true;\n\n        if (!deferClear) {\n            this.clear();\n        }\n\n        return this.loadResults(0).then(\n            results => {\n                this.pages = [];\n                this.parseResults(results, 0);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadResults(offset: number) {\n        const preloaded = app.preloadedApiDocument();\n\n        if (preloaded) {\n            return Promise.resolve(preloaded);\n        }\n\n        const params = this.requestParams();\n        params.page = {offset};\n\n        return app.store.find(this.type(), params);\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        const nextPageNumber = this.pages.length;\n\n        this.loadResults(nextPageNumber * this.limit())\n            .then(results => {\n                this.parseResults(results, nextPageNumber);\n            });\n    }\n\n    parseResults(results: any, number: number) {\n        if (results.length) {\n            this.pages.push(new Page(number, results, results.payload.links));\n        }\n\n        this.moreResults = results.payload.links && !!results.payload.links.next;\n\n        this.loading = false;\n\n        m.redraw();\n\n        return results;\n    }\n\n    remove(model: T) {\n        this.pages.forEach(page => {\n            const index = page.items.indexOf(model);\n\n            if (index !== -1) {\n                page.items.splice(index, 1);\n            }\n        });\n    }\n\n    add(model: T) {\n        // There should generally be a page, even if it's empty\n        // However if the list was never loaded/refreshed it might not exist\n        // We'll just push a first page if that happens\n        if (!this.pages.length) {\n            this.pages.push(new Page<T>(1, []));\n        }\n\n        this.pages[0].items.unshift(model);\n    }\n}\n","import AbstractListState from './AbstractListState';\nimport Product from '../models/Product';\n\nexport default class ProductListState extends AbstractListState<Product> {\n    type() {\n        return 'flamarkt/products';\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport Model from 'flarum/common/Model';\nimport AbstractListState from '../states/AbstractListState';\n\nexport interface SortDropdownAttrs extends ComponentAttrs {\n    state: AbstractListState<Model>\n    updateUrl?: boolean\n}\n\nexport interface SortOptions {\n    [key: string]: string\n}\n\nexport default abstract class AbstractSortDropdown<T extends SortDropdownAttrs> extends Component<T> {\n    view() {\n        const options = this.options();\n\n        const activeSort = this.activeSort();\n\n        return m(Dropdown, {\n            className: 'SortDropdown ' + this.className(),\n            buttonClassName: 'Button',\n            label: options[activeSort],\n        }, Object.keys(options).map((value) => {\n            const label = options[value];\n            const active = value === this.activeSort();\n\n            return m(Button, {\n                icon: active ? 'fas fa-check' : true,\n                onclick: () => {\n                    this.applySort(value);\n                },\n                active,\n            }, label);\n        }));\n    }\n\n    className(): string {\n        return '';\n    }\n\n    activeSort(): string {\n        return this.attrs.state.params.sort || this.defaultSort();\n    }\n\n    applySort(sort: string) {\n        // Clone params otherwise it causes a page refresh even without m.route.set\n        const params = {...m.route.param()};\n\n        if (this.defaultSort() === sort) {\n            delete this.attrs.state.params.sort;\n            delete params.sort;\n        } else {\n            this.attrs.state.params.sort = sort;\n            params.sort = sort;\n        }\n\n        if (this.attrs.updateUrl) {\n            delete params.key;\n\n            // @ts-ignore\n            const {routeName} = app.current.data;\n\n            m.route.set(app.route(routeName, params));\n        } else {\n            this.attrs.state.refresh();\n        }\n    }\n\n    abstract options(): SortOptions\n\n    defaultSort(): string {\n        return Object.keys(this.options())[0];\n    }\n}\n\n","import AbstractSortDropdown, {SortDropdownAttrs, SortOptions} from './AbstractSortDropdown';\nimport ProductListState from '../states/ProductListState';\n\nexport interface ProductSortDropdownAttrs extends SortDropdownAttrs {\n    state: ProductListState\n}\n\nexport default class ProductSortDropdown extends AbstractSortDropdown<ProductSortDropdownAttrs> {\n    className(): string {\n        return 'ProductSortDropdown';\n    }\n\n    options(): SortOptions {\n        return {\n            '-createdAt': app.translator.trans('flamarkt-core.lib.sort.products.createdAtDesc'),\n            'createdAt': app.translator.trans('flamarkt-core.lib.sort.products.createdAtAsc'),\n            'price': app.translator.trans('flamarkt-core.lib.sort.products.priceAsc'),\n            '-price': app.translator.trans('flamarkt-core.lib.sort.products.priceDesc'),\n            'title': app.translator.trans('flamarkt-core.lib.sort.products.titleAsc'),\n            '-title': app.translator.trans('flamarkt-core.lib.sort.products.titleDesc'),\n        };\n    }\n}\n","import {Vnode} from 'mithril';\nimport Page from 'flarum/common/components/Page';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport ProductList from '../components/ProductList';\nimport ProductListState from '../../common/states/ProductListState';\nimport ProductSortDropdown from '../../common/components/ProductSortDropdown';\n\nexport default class ProductIndexPage extends Page {\n    state!: ProductListState;\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.state = this.initState();\n        this.state.refresh();\n\n        app.setTitle(app.translator.trans('flamarkt-core.backoffice.products.title'));\n        app.setTitleCount(0);\n    }\n\n    initState() {\n        const params = m.route.param();\n\n        return new ProductListState({\n            sort: params.sort,\n        });\n    }\n\n    view() {\n        return m('.ProductIndexPage', m('.container', [\n            m('.Form-group', [\n                LinkButton.component({\n                    className: 'Button',\n                    href: app.route('products.show', {\n                        id: 'new',\n                    }),\n                }, app.translator.trans('flamarkt-core.backoffice.products.new')),\n                m(ProductSortDropdown, {\n                    state: this.state,\n                }),\n            ]),\n            m(ProductList, {\n                state: this.state,\n            }),\n        ]));\n    }\n}\n","import * as Mithril from 'mithril';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport Page from 'flarum/common/components/Page';\nimport Model from 'flarum/common/Model';\n\nexport default abstract class AbstractShowPage extends Page {\n    oninit(vnode: Mithril.Vnode<ComponentAttrs>) {\n        super.oninit(vnode);\n\n        this.load();\n    }\n\n    load() {\n        const preloaded = app.preloadedApiDocument();\n\n        const id = m.route.param('id');\n\n        if (id === 'new') {\n            const newRecord = this.newRecord();\n\n            if (newRecord) {\n                this.show(newRecord);\n            }\n        } else if (preloaded instanceof Model) {\n            this.show(preloaded);\n        } else {\n            const params = this.requestParams();\n\n            app.store.find(this.findType(), id, params).then(model => {\n                this.show(model);\n\n                m.redraw();\n            });\n        }\n    }\n\n    newRecord(): Model | null {\n        return null;\n    }\n\n    findType(): string {\n        return '';\n    }\n\n    requestParams(): any {\n        return {};\n    }\n\n    show(model: Model) {\n        //\n    }\n\n    /**\n     * This method allows saving a model without the values changing in the store before a successful save\n     * It's important to use createRecord and model.pushData which don't update the store\n     * @param id\n     * @param attributes\n     */\n    saveThroughNewRecord<T extends Model = Model>(id: string, attributes: any): Promise<T> {\n        const record = this.newRecord();\n\n        if (!record) {\n            return Promise.reject();\n        }\n\n        if (id) {\n            record.pushData({id});\n            record.exists = true;\n        }\n\n        return record.save(attributes);\n    }\n}\n","import Component from 'flarum/common/Component';\nimport Button from \"flarum/common/components/Button\";\n\nexport default class SubmitButton extends Component {\n    view(vnode) {\n        const {\n            exists = false,\n            dirty = true,\n            ...attrs\n        } = vnode.attrs;\n\n        let label = '';\n\n        // Check if children is truthy or is an array containing anything that's truthy\n        if (Array.isArray(vnode.children) ? vnode.children.some(a => a) : vnode.children) {\n            label = vnode.children;\n        } else if (exists) {\n            if (dirty) {\n                //TODO: translations\n                label = 'Save';\n            } else {\n                label = 'Saved';\n            }\n        } else {\n            label = 'Create';\n        }\n\n        return Button.component({\n            type: 'submit',\n            className: 'Button Button--primary',\n            disabled: exists && !dirty,\n            ...attrs,\n        }, label);\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\n\ninterface SoftDeleteButtonAttrs extends ComponentAttrs {\n    model: {\n        exists: boolean\n        isHidden(): boolean\n        save(attributes: any): any\n    }\n}\n\nexport default class SoftDeleteButton extends Component<SoftDeleteButtonAttrs> {\n    saving: boolean = false;\n\n    view() {\n        const {model} = this.attrs;\n\n        if (!model.exists) {\n            return null;\n        }\n\n        return m(Button, {\n            className: 'Button',\n            icon: model.isHidden() ? 'fas fa-eye' : 'fas fa-eye-slash',\n            onclick: () => {\n                this.saving = true;\n\n                model.save({\n                    isHidden: !model.isHidden(),\n                }).then(() => {\n                    this.saving = false;\n                    m.redraw();\n                }).catch((error: any) => {\n                    this.saving = false;\n                    m.redraw();\n\n                    throw error;\n                });\n            },\n        }, model.isHidden() ? 'Restore' : 'Soft Delete');\n    }\n}\n","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\n\ninterface PermanentDeleteButtonAttrs extends ComponentAttrs {\n    model: {\n        isHidden(): boolean\n        delete(): any\n    }\n\n    afterdelete(): void\n}\n\nexport default class PermanentDeleteButton extends Component<PermanentDeleteButtonAttrs> {\n    saving: boolean = false;\n\n    view() {\n        const {model} = this.attrs;\n\n        if (!model.isHidden()) {\n            return null;\n        }\n\n        return m(Button, {\n            className: 'Button',\n            icon: 'fas fa-trash',\n            onclick: () => {\n                if (!confirm('Are you sure you want to permanently delete this record?')) {\n                    return;\n                }\n\n                this.saving = true;\n\n                model.delete().then(() => {\n                    this.saving = false;\n                    m.redraw();\n\n                    this.attrs.afterdelete();\n                }).catch((error: any) => {\n                    this.saving = false;\n                    m.redraw();\n\n                    throw error;\n                });\n            },\n        }, 'Delete Permanently');\n    }\n}\n","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Product from '../models/Product';\n\nexport interface DecimalInputAttrs extends ComponentAttrs {\n    value: number\n    onchange: (value: number) => void\n    disabled?: boolean\n    product?: Product\n    unit?: string\n    min?: number\n    max?: number\n    step?: number\n    decimals?: number\n}\n\nexport default class DecimalInput<T extends DecimalInputAttrs = DecimalInputAttrs> extends Component<T> {\n    decimals(): number {\n        return this.attrs.decimals || 0;\n    }\n\n    min(): number | undefined {\n        return this.attrs.min;\n    }\n\n    max(): number | undefined {\n        return this.attrs.max;\n    }\n\n    step(): number | undefined {\n        return this.attrs.step;\n    }\n\n    fromIntegerValue(value: number): number {\n        return value / Math.pow(10, this.decimals());\n    }\n\n    toIntegerValue(value: number): number {\n        return Math.round(value * Math.pow(10, this.decimals()));\n    }\n\n    view() {\n        const inputAttrs: any = {\n            type: 'number',\n            value: this.fromIntegerValue(this.attrs.value) + '', // Cast to string to preserve zero\n            onchange: (event: Event) => {\n                const value = parseFloat((event.target as HTMLInputElement).value);\n\n                this.attrs.onchange(this.toIntegerValue(value));\n            },\n        };\n\n        const min = this.min();\n\n        if (typeof min !== 'undefined') {\n            inputAttrs.min = this.fromIntegerValue(min);\n        }\n\n        const max = this.max();\n\n        if (typeof max !== 'undefined') {\n            inputAttrs.max = this.fromIntegerValue(max);\n        }\n\n        const step = this.step();\n\n        if (typeof step !== 'undefined') {\n            inputAttrs.step = this.fromIntegerValue(step);\n        } else if (this.decimals() > 0) {\n            inputAttrs.step = 1 / Math.pow(10, this.decimals());\n        }\n\n        return m('input.FormControl', inputAttrs);\n    }\n}\n","import DecimalInput from './DecimalInput';\n\nexport default class PriceInput extends DecimalInput {\n    decimals(): number {\n        return app.forum.attribute('priceDecimals');\n    }\n}\n","import LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport AbstractShowPage from '../../common/pages/AbstractShowPage';\nimport Product from '../../common/models/Product';\nimport SubmitButton from '../components/SubmitButton';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport Select from 'flarum/common/components/Select';\nimport SoftDeleteButton from '../components/SoftDeleteButton';\nimport PermanentDeleteButton from '../components/PermanentDeleteButton';\nimport PriceInput from '../../common/components/PriceInput';\n\nexport default class ProductShowPage extends AbstractShowPage {\n    product: Product | null = null;\n    saving: boolean = false;\n    dirty: boolean = false;\n    title: string = '';\n    description: string = '';\n    price: number = 0;\n    availabilityDriver: string | null = null;\n    priceDriver: string | null = null;\n\n    // We can't use the TextEditor component without having a composer object where the editor can be written to\n    composer = {\n        editor: null,\n    };\n\n    newRecord() {\n        return app.store.createRecord('flamarkt-products', {\n            // Necessary because some of the extensions read values with model.attribute(name)\n            // which errors if the attributes object is not defined\n            attributes: {},\n        });\n    }\n\n    findType() {\n        return 'flamarkt/products';\n    }\n\n    show(product: Product) {\n        this.product = product;\n        this.title = product.title() || '';\n        this.description = product.description() || '';\n        this.price = product.priceEdit() || 0;\n        this.availabilityDriver = product.attribute('availabilityDriver');\n        this.priceDriver = product.attribute('priceDriver');\n\n        //app.history.push('product', product.title());\n        // @ts-ignore\n        app.setTitle(product.title());\n        app.setTitleCount(0);\n    }\n\n    view() {\n        if (!this.product) {\n            return LoadingIndicator.component();\n        }\n\n        return m('form.ProductShowPage', {\n            onsubmit: this.onsubmit.bind(this),\n        }, m('.container.container--narrow', this.fields().toArray()));\n    }\n\n    fields(): ItemList {\n        const fields = new ItemList();\n\n        // We need to patch our way through the global app object because of https://github.com/flarum/markdown/pull/28\n        // which made the markdown toolbar only work globally\n        // TODO: remove when possible\n        // @ts-ignore\n        app.composer = this.composer;\n\n        fields.add('title', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.products.field.title')),\n            m('input.FormControl', {\n                type: 'text',\n                value: this.title,\n                oninput: (event: Event) => {\n                    this.title = (event.target as HTMLInputElement).value;\n                    this.dirty = true;\n                },\n                disabled: this.saving,\n            }),\n        ]), 50);\n\n        fields.add('description', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.products.field.description')),\n            m('.FormControl.FormControl--editor', TextEditor.component({\n                value: this.description,\n                onchange: (value: string) => {\n                    this.description = value;\n                    this.dirty = true;\n\n                    m.redraw();\n                },\n                disabled: this.saving,\n                composer: this.composer,\n            })),\n        ]), 40);\n\n        fields.add('price', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.products.field.price')),\n            m(PriceInput, {\n                value: this.price,\n                onchange: (value: number) => {\n                    this.price = value;\n                    this.dirty = true;\n                },\n                disabled: this.saving,\n            }),\n        ]), 30);\n\n        fields.add('availabilityDriver', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.products.field.availabilityDriver')),\n            Select.component({\n                value: this.availabilityDriver || '_default',\n                options: this.availabilityDriverOptions(),\n                onchange: (value: string) => {\n                    this.availabilityDriver = value === '_default' ? null : value;\n                    this.dirty = true;\n                },\n            }),\n        ]), 20);\n\n        fields.add('priceDriver', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.products.field.priceDriver')),\n            Select.component({\n                value: this.priceDriver || '_default',\n                options: this.priceDriverOptions(),\n                onchange: (value: string) => {\n                    this.priceDriver = value === '_default' ? null : value;\n                    this.dirty = true;\n                },\n            }),\n        ]), 10);\n\n        fields.add('submit', m('.Form-group', [\n            SubmitButton.component({\n                loading: this.saving,\n                dirty: this.dirty,\n                exists: this.product!.exists,\n            }),\n            ' ',\n            SoftDeleteButton.component({\n                model: this.product,\n            }),\n            ' ',\n            PermanentDeleteButton.component({\n                model: this.product,\n                afterdelete() {\n                    m.route.set(app.route('products.index'));\n                },\n            }),\n        ]), -10);\n\n        return fields;\n    }\n\n    availabilityDriverOptions(): any {\n        const options: any = {\n            _default: 'Default',\n        };\n\n        (app.forum.attribute('flamarktAvailabilityDrivers') as string[] || []).forEach(driver => {\n            options[driver] = driver;\n        });\n\n        return options;\n    }\n\n    priceDriverOptions(): any {\n        const options: any = {\n            _default: 'Default',\n        };\n\n        (app.forum.attribute('flamarktPriceDrivers') as string[] || []).forEach(driver => {\n            options[driver] = driver;\n        });\n\n        return options;\n    }\n\n    data() {\n        return {\n            title: this.title,\n            description: this.description,\n            price: this.price,\n            availabilityDriver: this.availabilityDriver,\n            priceDriver: this.priceDriver,\n        };\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.saving = true;\n\n        // We can't use product.save() because Flarum updates the internal data object before saving\n        // Which interferes with the rendering of the Form that reads those values (including taxonomy fields and variants)\n        this.saveThroughNewRecord<Product>(this.product?.id(), this.data()).then(product => {\n            this.product = product;\n\n            this.saving = false;\n            this.dirty = false;\n            m.redraw();\n\n            m.route.set(app.route.product(product));\n        }).catch(error => {\n            this.saving = false;\n            m.redraw();\n\n            throw error;\n        });\n    }\n}\n","import AbstractListState from './AbstractListState';\nimport Order from '../models/Order';\n\nexport default class OrderListState extends AbstractListState<Order> {\n    type() {\n        return 'flamarkt/orders';\n    }\n}\n","import {Children} from 'mithril';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Product from '../models/Product';\n\nexport interface DecimalLabelAttrs extends ComponentAttrs {\n    value: number\n    product?: Product\n    unit?: string\n    decimals?: number\n}\n\nexport default class DecimalLabel<T extends DecimalLabelAttrs = DecimalLabelAttrs> extends Component<T> {\n    decimals(): number {\n        return this.attrs.decimals || 0;\n    }\n\n    fromIntegerValue(value: number): number {\n        return value / Math.pow(10, this.decimals());\n    }\n\n    view(): Children {\n        return this.fromIntegerValue(this.attrs.value).toFixed(this.decimals());\n    }\n}\n","import DecimalLabel, {DecimalLabelAttrs} from './DecimalLabel';\n\nexport interface PriceLabelAttrs extends DecimalLabelAttrs {\n    hint?: string // A text designed to help with extensibility\n}\n\nexport default class PriceLabel<T extends PriceLabelAttrs = PriceLabelAttrs> extends DecimalLabel<T> {\n    decimals(): number {\n        return app.forum.attribute('priceDecimals');\n    }\n\n    view() {\n        return [\n            super.view(),\n            ' ',\n            app.forum.attribute('priceUnit'),\n        ];\n    }\n}\n","import LinkButton from 'flarum/common/components/LinkButton';\nimport AbstractList from './AbstractList';\nimport Order from '../../common/models/Order';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport PriceLabel from '../../common/components/PriceLabel';\n\nexport default class OrderList extends AbstractList<Order> {\n    head() {\n        const columns = super.head();\n\n        columns.add('number', m('th', app.translator.trans('flamarkt-core.backoffice.orders.head.number')), 50);\n        columns.add('date', m('th', app.translator.trans('flamarkt-core.backoffice.orders.head.date')), 40);\n        columns.add('user', m('th', app.translator.trans('flamarkt-core.backoffice.orders.head.user')), 30);\n        columns.add('priceTotal', m('th', app.translator.trans('flamarkt-core.backoffice.orders.head.priceTotal')), 20);\n        columns.add('paidAmount', m('th', app.translator.trans('flamarkt-core.backoffice.orders.head.paidAmount')), 10);\n        columns.add('productCount', m('th', app.translator.trans('flamarkt-core.backoffice.orders.head.productCount')), 5);\n\n        return columns;\n    }\n\n    columns(order: Order) {\n        const columns = super.columns(order);\n\n        columns.add('number', m('td', order.number()), 50);\n        columns.add('date', m('td', humanTime(order.createdAt())), 40);\n        columns.add('user', m('td', username(order.user())), 30);\n        columns.add('priceTotal', m('td', m(PriceLabel, {\n            value: order.priceTotal(),\n        })), 20);\n        columns.add('paidAmount', m('td', m(PriceLabel, {\n            value: order.paidAmount(),\n        })), 10);\n        columns.add('productCount', m('td', order.productCount()), 5);\n\n        return columns;\n    }\n\n    actions(order: Order) {\n        const actions = super.actions(order);\n\n        actions.add('edit', LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-pen',\n            href: app.route.order(order),\n        }));\n\n        return actions;\n    }\n}\n","import AbstractSortDropdown, {SortDropdownAttrs, SortOptions} from './AbstractSortDropdown';\nimport OrderListState from '../states/OrderListState';\n\nexport interface OrderSortDropdownAttrs extends SortDropdownAttrs {\n    state: OrderListState\n}\n\nexport default class OrderSortDropdown extends AbstractSortDropdown<OrderSortDropdownAttrs> {\n    className(): string {\n        return 'OrderSortDropdown';\n    }\n\n    options(): SortOptions {\n        return {\n            '-createdAt': 'Newest',\n            'createdAt': 'Oldest',\n            '-priceTotal': 'Highest total',\n            'priceTotal': 'Lowest total',\n        };\n    }\n}\n","import {Vnode} from 'mithril';\nimport Page from 'flarum/common/components/Page';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport OrderListState from '../../common/states/OrderListState';\nimport OrderList from '../components/OrderList';\nimport OrderSortDropdown from '../../common/components/OrderSortDropdown';\n\nexport default class OrderIndexPage extends Page {\n    state!: OrderListState;\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.state = this.initState();\n        this.state.refresh();\n\n        app.setTitle(app.translator.trans('flamarkt-core.backoffice.orders.title'));\n        app.setTitleCount(0);\n    }\n\n    initState() {\n        const pageParams = m.route.param();\n\n        const params: any = {\n            sort: pageParams.sort,\n        }\n\n        if (pageParams.user) {\n            params.filter = params.filter || {};\n            params.filter.user = pageParams.user;\n        }\n\n        return new OrderListState(params);\n    }\n\n    view() {\n        return m('.OrderIndexPage', m('.container', [\n            m('.Form-group', [\n                LinkButton.component({\n                    className: 'Button',\n                    href: app.route('orders.show', {\n                        id: 'new',\n                    }),\n                }, app.translator.trans('flamarkt-core.backoffice.orders.new')),\n                m(OrderSortDropdown, {\n                    state: this.state,\n                }),\n            ]),\n            m(OrderList, {\n                state: this.state,\n            }),\n        ]));\n    }\n}\n","import {ClassComponent, Vnode, VnodeDOM} from 'mithril';\n\ninterface SortableAttrs {\n    className?: string\n    handleClassName?: string | null\n    containerTag?: string\n    placeholderTag?: string\n    disabled?: boolean\n    direction?: 'vertical' | 'horizontal'\n    onsort: (origin: number, destination: number) => void,\n}\n\n/**\n * A sortable implementation inspired by html5sortable, but designed to work with Mithril\n * The sortable children must be a flat array of vnodes and be keyed\n */\nexport default class Sortable implements ClassComponent<SortableAttrs> {\n    sortingIndex: number | null = null;\n    showPlaceholderForIndex: number = 0;\n\n    dragoverenterhandler!: (event: DragEvent) => void;\n    drophandler!: (event: DragEvent) => void;\n\n    oncreate(vnode: VnodeDOM<SortableAttrs>) {\n        // We need to handle both dragover and dragenter to prevent inputs from showing a cursor when hovered\n        // We also need this event to handle mouse movement because stopping propagation seems to stop mousemove event\n        this.dragoverenterhandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n                // @ts-ignore dataTransfer could be null... but not sure when that could happen\n                event.dataTransfer.dropEffect = 'move';\n\n                let targetIndex = 0;\n\n                // We will show the placeholder above or below the hovered item using the middle height as criteria\n                (vnode.dom.childNodes as any as HTMLElement[]).forEach(element => {\n                    const index = parseInt(element.dataset.index || '');\n\n                    // Ignore elements without an index (those will be the placeholders)\n                    if (isNaN(index)) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    if (vnode.attrs.direction === 'horizontal') {\n                        // Ignore invisible elements\n                        if (!position.width) {\n                            return;\n                        }\n\n                        const middleX = position.left + (position.width / 2);\n\n                        if (event.pageX > middleX + window.scrollX) {\n                            targetIndex = index + 1;\n                        }\n                    } else {\n                        // Ignore invisible elements\n                        if (!position.height) {\n                            return;\n                        }\n\n                        const middleY = position.top + (position.height / 2);\n\n                        if (event.pageY > middleY + window.scrollY) {\n                            targetIndex = index + 1;\n                        }\n                    }\n                });\n\n                if (targetIndex !== this.showPlaceholderForIndex) {\n                    this.showPlaceholderForIndex = targetIndex;\n                    m.redraw();\n                }\n            }\n        };\n\n        document.addEventListener('dragover', this.dragoverenterhandler);\n        document.addEventListener('dragenter', this.dragoverenterhandler);\n\n        // Prevent dropping our sortable item into anything else\n        // Without this it's possible to drop the value into inputs or worse, cause the browser to navigate to 0.0.0.0\n        this.drophandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const origin = this.sortingIndex;\n                // This component works in reference to the original index, so there are always two possible placeholders\n                // in between the moved component. However we want to send the new index without that space\n                const destination = this.showPlaceholderForIndex - (this.showPlaceholderForIndex > this.sortingIndex ? 1 : 0);\n\n                this.sortingIndex = null;\n                m.redraw();\n\n                if (destination !== origin) {\n                    vnode.attrs.onsort(origin, destination);\n                }\n            }\n        };\n\n        document.addEventListener('drop', this.drophandler);\n    }\n\n    onremove() {\n        document.removeEventListener('dragover', this.dragoverenterhandler);\n        document.removeEventListener('dragenter', this.dragoverenterhandler);\n        document.removeEventListener('drop', this.drophandler);\n    }\n\n    view(vnode: Vnode<SortableAttrs>) {\n        const children: Vnode[] = [];\n\n        (vnode.children as Vnode<any>[]).forEach((content, index) => {\n            if (this.sortingIndex !== null && this.showPlaceholderForIndex === index) {\n                children.push(this.placeholder(vnode));\n            }\n\n            if (index === this.sortingIndex) {\n                if (!content.attrs.style) {\n                    content.attrs.style = {};\n                }\n\n                content.attrs.style.display = 'none';\n            }\n\n            content.attrs['data-index'] = index;\n            content.attrs.ondragstart = (event: DragEvent) => {\n                if (!event.target || !event.dataTransfer) {\n                    return;\n                }\n\n                let {handleClassName} = vnode.attrs;\n\n                // By default we only handle moves that have this class name\n                // The check can be disabled by setting handleClassName to null\n                if (typeof handleClassName === 'undefined') {\n                    handleClassName = 'js-handle';\n                }\n\n                if ((!handleClassName || (event.target as HTMLElement).classList.contains(handleClassName)) && !vnode.attrs.disabled) {\n                    const element = Array.from((vnode as any as VnodeDOM).dom.childNodes as any as HTMLElement[]).find(elem => elem.dataset.index === index + '');\n\n                    // This should usually not happen since all referenced indexes should exist\n                    // But this pleases typescript\n                    if (!element) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    event.dataTransfer.effectAllowed = 'move';\n                    event.dataTransfer.setData('text/plain', index + ''); // Cast to string\n                    event.dataTransfer.setDragImage(element, event.pageX - position.left - window.scrollX, event.pageY - position.top - window.scrollY);\n\n                    this.sortingIndex = index;\n                    this.showPlaceholderForIndex = index;\n                } else {\n                    // @ts-ignore Mithril event redraw\n                    event.redraw = false;\n                }\n            };\n\n            children.push(content);\n        });\n\n        if (this.sortingIndex !== null && this.showPlaceholderForIndex === (vnode.children as Vnode[]).length) {\n            children.push(this.placeholder(vnode));\n        }\n\n        const attrs: any = {};\n\n        if (vnode.attrs.className) {\n            attrs.className = vnode.attrs.className;\n        }\n\n        return m(vnode.attrs.containerTag || 'div', attrs, children);\n    }\n\n    placeholder(vnode: Vnode<SortableAttrs>): Vnode {\n        return m(vnode.attrs.placeholderTag || 'div', {\n            className: 'SortablePlaceholder',\n            key: 'placeholder',\n        }, vnode.attrs.placeholderTag === 'tr' ? m('td', {\n            colspan: 100,\n        }) : null);\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport icon from 'flarum/common/helpers/icon';\n\ninterface SortableHandleAttrs {\n    elementTag?: string\n    className?: string\n    disabled?: boolean\n}\n\nexport default class SortableHandle implements ClassComponent<SortableHandleAttrs> {\n    view(vnode: Vnode<SortableHandleAttrs>) {\n        const attrs: any = {\n            className: (vnode.attrs.className ? vnode.attrs.className + ' ' : '') + 'js-handle',\n        };\n\n        if (vnode.attrs.disabled) {\n            attrs.className += ' disabled';\n        } else {\n            attrs.draggable = 'true';\n        }\n\n        return m(vnode.attrs.elementTag || 'div', attrs, icon('fas fa-grip-lines'));\n    }\n}\n","type KeyboardEventHandler = (event: KeyboardEvent) => void;\ntype ShouldHandle = (event: KeyboardEvent) => boolean;\n\n/**\n * Same as Flarum's, but in common namespace so we can use it in backoffice as wel\n */\nexport default class KeyboardNavigatable {\n    /**\n     * Callback to be executed for a specified input.\n     */\n    protected callbacks = new Map<number, KeyboardEventHandler>();\n\n    /**\n     * Callback that determines whether keyboard input should be handled.\n     * By default, always handle keyboard navigation.\n     */\n    protected whenCallback: ShouldHandle = (event: KeyboardEvent) => true;\n\n    /**\n     * Provide a callback to be executed when navigating upwards.\n     *\n     * This will be triggered by the Up key.\n     */\n    onUp(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(38, (e) => {\n            e.preventDefault();\n            callback(e);\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when navigating downwards.\n     *\n     * This will be triggered by the Down key.\n     */\n    onDown(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(40, (e) => {\n            e.preventDefault();\n            callback(e);\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when the current item is selected..\n     *\n     * This will be triggered by the Return and Tab keys..\n     */\n    onSelect(callback: KeyboardEventHandler): KeyboardNavigatable {\n        const handler: KeyboardEventHandler = (e) => {\n            e.preventDefault();\n            callback(e);\n        };\n\n        this.callbacks.set(9, handler);\n        this.callbacks.set(13, handler);\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when the navigation is canceled.\n     *\n     * This will be triggered by the Escape key.\n     */\n    onCancel(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(27, (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            callback(e);\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback to be executed when previous input is removed.\n     *\n     * This will be triggered by the Backspace key.\n     *\n     * @public\n     * @param {KeyboardNavigatable~keyCallback} callback\n     * @return {KeyboardNavigatable}\n     */\n    onRemove(callback: KeyboardEventHandler): KeyboardNavigatable {\n        this.callbacks.set(8, (e) => {\n            if (e.target.selectionStart === 0 && e.target.selectionEnd === 0) {\n                callback(e);\n                e.preventDefault();\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Provide a callback that determines whether keyboard input should be handled.\n     */\n    when(callback: ShouldHandle): KeyboardNavigatable {\n        this.whenCallback = callback;\n\n        return this;\n    }\n\n    /**\n     * Set up the navigation key bindings on the given jQuery element.\n     */\n    bindTo($element: JQuery) {\n        // Handle navigation key events on the navigatable element.\n        $element.on('keydown', this.navigate.bind(this));\n    }\n\n    /**\n     * Interpret the given keyboard event as navigation commands.\n     */\n    navigate(event: KeyboardEvent) {\n        // This callback determines whether keyboard should be handled or ignored.\n        if (!this.whenCallback(event)) return;\n\n        const keyCallback = this.callbacks.get(event.which);\n        if (keyCallback) {\n            keyCallback(event);\n        }\n    }\n}\n","import {Children, Vnode, VnodeDOM} from 'mithril';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Model from 'flarum/common/Model';\nimport KeyboardNavigatable from '../../common/utils/KeyboardNavigatable';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\nimport ItemList from 'flarum/common/utils/ItemList';\n\nexport interface RelationshipSelectAttrs<T> extends ComponentAttrs {\n    relationship: T | T[] | null\n    hasOne: boolean\n    onchange: (value: T | T[] | null) => {},\n    placeholder?: string\n}\n\nexport default abstract class AbstractRelationshipSelect<T extends Model> extends Component<RelationshipSelectAttrs<T>> {\n    searchFilter: string = '';\n    debouncedSearchFilter: string = '';\n    searchDebouncer?: number;\n    activeListIndex: number = 0;\n    inputIsFocused: boolean = false;\n    navigator!: KeyboardNavigatable;\n    dropdownIsFocused: boolean = false\n    onmousedown!: (event: Event) => void\n\n    className(): string {\n        return '';\n    }\n\n    abstract search(query: string): Promise<void>\n\n    abstract results(query: string): T[] | null\n\n    abstract item(model: T, query?: string): Children\n\n    normalizedValue(): T[] {\n        if (Array.isArray(this.attrs.relationship)) {\n            return this.attrs.relationship;\n        }\n\n        if (this.attrs.relationship) {\n            return [this.attrs.relationship];\n        }\n\n        return [];\n    }\n\n    setValue(models: T[]) {\n        if (this.attrs.hasOne) {\n            this.attrs.onchange(models.length ? models[0] : null);\n        } else {\n            this.attrs.onchange(models);\n        }\n    }\n\n    oninit(vnode: Vnode<RelationshipSelectAttrs<T>, this>) {\n        super.oninit(vnode);\n\n        this.navigator = new KeyboardNavigatable();\n        this.navigator\n            .onUp(() => this.setIndex(this.activeListIndex - 1, true))\n            .onDown(() => this.setIndex(this.activeListIndex + 1, true))\n            .onSelect(this.select.bind(this))\n            .onRemove(() => {\n                const models = this.normalizedValue();\n\n                if (!models.length) {\n                    return;\n                }\n\n                this.toggleModel(models[models.length - 1]);\n            })\n            .when(event => {\n                // We want to allow selecting with space because it's a common way to select\n                // However this interferes with the ability to enter spaces\n                // So we will have space act as select, but only if nothing is typed yet\n                if (event.key === ' ' && this.searchFilter === '') {\n                    event.preventDefault();\n                    this.select(event);\n\n                    return false;\n                }\n\n                // We don't want Tab to act as select, as this prevent moving from field to field\n                return event.key !== 'Tab';\n            });\n    }\n\n    oncreate(vnode: VnodeDOM<RelationshipSelectAttrs<T>, this>) {\n        super.oncreate(vnode);\n\n        // Since we are not calling the original Component.oncreate, we need to copy the dom reference manually\n        this.element = vnode.dom;\n\n        this.onmousedown = (event: Event) => {\n            const dropdown = vnode.dom.querySelector('.Dropdown-menu');\n\n            if (\n                dropdown &&\n                dropdown.contains(event.target as HTMLElement)\n            ) {\n                if (!this.dropdownIsFocused) {\n                    this.dropdownIsFocused = true;\n                    m.redraw();\n                }\n            } else {\n                if (this.dropdownIsFocused) {\n                    this.dropdownIsFocused = false;\n                    m.redraw();\n                }\n            }\n        };\n\n        document.addEventListener('mousedown', this.onmousedown);\n    }\n\n    onremove(vnode: VnodeDOM<RelationshipSelectAttrs<T>, this>) {\n        super.onremove(vnode);\n\n        document.removeEventListener('mousedown', this.onmousedown);\n    }\n\n    indexInSelectedModels(model: T) {\n        return this.normalizedValue().findIndex(m => m.id() === model.id());\n    }\n\n    addModel(model: T) {\n        if (this.attrs.hasOne) {\n            this.setValue([model]);\n        } else {\n            const models = this.normalizedValue();\n\n            models.push(model);\n\n            this.setValue(models);\n        }\n    }\n\n    removeModel(model: T) {\n        const index = this.indexInSelectedModels(model);\n\n        if (index !== -1) {\n            const models = this.normalizedValue();\n\n            models.splice(index, 1);\n\n            this.setValue(models);\n        }\n    }\n\n    view() {\n        return m('.RelationshipSelect', {\n            className: this.className(),\n        }, [\n            m('.RelationshipSelect-Form', this.formItems().toArray()),\n            this.listAvailableModels(this.results(this.debouncedSearchFilter)),\n        ]);\n    }\n\n    formItems() {\n        const items = new ItemList();\n\n        items.add('input', m('.RelationshipSelect-FakeInput-Wrapper', m('.RelationshipSelect-FakeInput.FormControl', {\n            className: this.inputIsFocused ? 'focus' : '',\n        }, this.inputItems().toArray())), 20);\n\n        return items;\n    }\n\n    inputItems() {\n        const items = new ItemList();\n\n        items.add('selected', this.normalizedValue().map(model => {\n            return m('span.RelationshipSelect-Selected', {\n                onclick: () => {\n                    this.toggleModel(model);\n                    this.onready();\n                },\n            }, this.item(model));\n        }), 20);\n\n        items.add('control', m('input.FormControl', {\n            placeholder: this.attrs.placeholder,\n            value: this.searchFilter,\n            oninput: (event: Event) => {\n                this.searchFilter = (event.target as HTMLInputElement).value;\n                this.activeListIndex = 0;\n\n                clearTimeout(this.searchDebouncer);\n\n                this.searchDebouncer = setTimeout(() => {\n                    this.debouncedSearchFilter = this.searchFilter;\n                    this.search(this.debouncedSearchFilter);\n                }, 300);\n            },\n            onkeydown: this.navigator.navigate.bind(this.navigator),\n            // Use local methods so that other extensions can extend behaviour\n            onfocus: this.oninputfocus.bind(this),\n            onblur: this.oninputblur.bind(this),\n        }), 10);\n\n        return items;\n    }\n\n    oninputfocus() {\n        this.inputIsFocused = true;\n\n        // If we click or move to the input without typing anything, we want to autocomplete the empty query\n        if (this.debouncedSearchFilter === '') {\n            this.search(this.debouncedSearchFilter);\n        }\n    }\n\n    oninputblur() {\n        this.inputIsFocused = false;\n    }\n\n    listAvailableModels(models: T[] | null): Children {\n        // We need two attributes to hold the dropdown open\n        // One is the input focus, managed by the modal\n        // The second one is needed because there's a short moment during a click where the focus is lost on the input\n        // mousedown triggers first, then the input blur, and only in mouseup can we put focus on the input again\n        if (!(this.inputIsFocused || this.dropdownIsFocused) || (Array.isArray(models) && models.length === 0)) {\n            return null;\n        }\n\n        let content;\n\n        if (models === null) {\n            content = LoadingIndicator.component();\n        } else {\n            content = models.map(this.listAvailableModel.bind(this));\n        }\n\n        return m('ul.Dropdown-menu.RelationshipSelect-Dropdown', content);\n    }\n\n    listAvailableModel(model: T, index: number) {\n        // Using a wrapper around the item to cancel Flarum default li > span rules\n        // And this could be useful for customization\n        return m('li.RelationshipSelect-Dropdown-Item', {\n            'data-index': index,\n            className: classList({\n                selected: this.indexInSelectedModels(model) !== -1,\n                active: this.activeListIndex === index,\n            }),\n            onmouseover: () => this.activeListIndex = index,\n            onclick: this.toggleModel.bind(this, model),\n        }, m('.RelationshipSelect-Dropdown-Item-Wrap', this.item(model, this.debouncedSearchFilter)));\n    }\n\n    toggleModel(model: T) {\n        const index = this.indexInSelectedModels(model);\n\n        if (index !== -1) {\n            this.removeModel(model);\n        } else {\n            this.addModel(model);\n        }\n\n        if (this.searchFilter) {\n            this.searchFilter = '';\n            this.debouncedSearchFilter = '';\n            this.activeListIndex = 0;\n        }\n\n        // Defer re-focusing to next browser draw\n        setTimeout(() => {\n            this.onready();\n        });\n    }\n\n    select(e: KeyboardEvent) {\n        const $element = this.getDomElement(this.activeListIndex);\n\n        // If nothing matches, the user probably typed text that doesn't match anything\n        // In that case we don't want to submit just yet, but we will delete the text\n        // so that typing enter multiple times does end up submitting\n        if (!$element.length) {\n            this.searchFilter = '';\n            this.debouncedSearchFilter = '';\n            return;\n        }\n\n        $element[0].dispatchEvent(new Event('click'));\n    }\n\n    getDomElement(index: number) {\n        return this.$(`.RelationshipSelect-Dropdown-Item[data-index=\"${index}\"]`);\n    }\n\n    setIndex(index: number, scrollToItem: boolean) {\n        const $dropdown = this.$('.RelationshipSelect-Dropdown');\n\n        const indexLength = this.$('.RelationshipSelect-Dropdown-Item').length;\n\n        if (index < 0) {\n            index = indexLength - 1;\n        } else if (index >= indexLength) {\n            index = 0;\n        }\n\n        const $item = this.getDomElement(index);\n        this.activeListIndex = index;\n\n        m.redraw();\n\n        if (scrollToItem) {\n            const dropdownScroll = $dropdown.scrollTop() || 0;\n            const dropdownTop = $dropdown.offset()?.top || 0;\n            const dropdownBottom = dropdownTop + ($dropdown.outerHeight() || 0);\n            const itemTop = $item.offset()?.top || 0;\n            const itemBottom = itemTop + ($item.outerHeight() || 0);\n\n            let scrollTop;\n            if (itemTop < dropdownTop) {\n                scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n            } else if (itemBottom > dropdownBottom) {\n                scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n            }\n\n            if (typeof scrollTop !== 'undefined') {\n                $dropdown.stop(true).animate({scrollTop}, 100);\n            }\n        }\n    }\n\n    onready() {\n        this.$('input').first().focus().select();\n    }\n}\n","import AbstractRelationshipSelect from './AbstractRelationshipSelect';\nimport highlight from 'flarum/common/helpers/highlight';\nimport Product from '../../common/models/Product';\n\nexport default class ProductRelationshipSelect extends AbstractRelationshipSelect<Product> {\n    protected resultsCache = new Map<string, Product[]>();\n\n    search(query: string) {\n        if (!query) {\n            m.redraw();\n            return Promise.resolve();\n        }\n\n        return app.store\n            .find('flamarkt/products', {\n                filter: {q: query},\n                page: {limit: 5},\n            })\n            .then((results) => {\n                this.resultsCache.set(query, results);\n                m.redraw();\n            });\n    }\n\n    results(query: string) {\n        if (!query) {\n            return [];\n        }\n\n        query = query.toLowerCase();\n\n        const results = this.resultsCache.get(query);\n\n        // Indicates still loading\n        if (typeof results === 'undefined') {\n            return null;\n        }\n\n        return (results || [])\n            .concat(\n                app.store\n                    .all('flamarkt-products')\n                    .filter(product => product.title().toLowerCase().substr(0, query.length) === query)\n            )\n            .filter((e, i, arr) => arr.lastIndexOf(e) === i)\n            .sort((a, b) => a.title().localeCompare(b.title()));\n    }\n\n    item(product: Product, query?: string) {\n        return [\n            query ? highlight(product.title(), query) : product.title(),\n        ];\n    }\n}\n","import DecimalInput from './DecimalInput';\n\nexport default class QuantityInput extends DecimalInput {\n    //\n}\n","import {Attributes, ClassComponent, Vnode} from 'mithril';\nimport SortableHandle from '../../common/components/SortableHandle';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Select from 'flarum/common/components/Select';\nimport ProductRelationshipSelect from './ProductRelationshipSelect';\nimport Product from '../../common/models/Product';\nimport OrderLineEditState from '../states/OrderLineEditState';\nimport PriceInput from '../../common/components/PriceInput';\nimport QuantityInput from '../../common/components/QuantityInput';\nimport PriceLabel from '../../common/components/PriceLabel';\n\ninterface OrderLineAttrs extends Attributes {\n    line: OrderLineEditState\n    sortable?: boolean\n    control: Vnode\n    onchange: () => void\n}\n\nexport default class OrderLineEdit implements ClassComponent<OrderLineAttrs> {\n    view(vnode: Vnode<OrderLineAttrs>) {\n        const {line, control, onchange, sortable, style, ondragstart} = vnode.attrs;\n\n        return m('tr', {\n            // Copy over attrs from Sortable component\n            style,\n            'data-index': vnode.attrs['data-index'],\n            ondragstart,\n        }, this.columns(line, control, onchange, sortable).toArray());\n    }\n\n    columns(line: OrderLineEditState, control: Vnode, onchange: () => void, sortable?: boolean): ItemList {\n        const columns = new ItemList();\n\n        columns.add('handle', m('td.OrderLineEdit-Handle', sortable ? m(SortableHandle) : null), 100);\n        columns.add('group', m('td.OrderLineEdit-Group', Select.component({\n            value: line.group === null ? '_none' : line.group,\n            onchange: (value: string) => {\n                line.group = value === '_none' ? null : value;\n                onchange();\n            },\n            options: {\n                _none: 'None',\n                shipping: 'Shipping',\n            },\n        })), 90);\n        columns.add('type', m('td.OrderLineEdit-Type', Select.component({\n            value: line.type,\n            onchange: (value: string) => {\n                line.type = value;\n                onchange();\n            },\n            options: {\n                product: 'Product',\n                manual: 'Manual',\n            },\n        })), 80);\n        columns.add('info', m('td.OrderLineEdit-Info', this.fields(line, onchange).toArray()), 30);\n        columns.add('priceUnit', m('td.OrderLineEdit-PriceUnit', m(PriceInput, {\n            value: line.priceUnit,\n            onchange: (value: number) => {\n                line.priceUnit = value;\n                line.updateTotal();\n                onchange();\n            },\n            product: line.product,\n        })), -30);\n        columns.add('quantity', m('td.OrderLineEdit-Quantity', m(QuantityInput, {\n            value: line.quantity,\n            onchange: (value: number) => {\n                line.quantity = value;\n                line.updateTotal();\n                onchange();\n            },\n            product: line.product,\n        })), -60);\n        columns.add('priceTotal', m('td.OrderLineEdit-PriceTotal', m(PriceLabel, {\n            value: line.priceTotal,\n            product: line.product,\n        })), -90);\n        columns.add('control', m('td.OrderLineEdit-Controls', control), -100);\n\n        return columns;\n    }\n\n    showInfoProduct(line: OrderLineEditState) {\n        return line.type === 'product';\n    }\n\n    showInfoLabel(line: OrderLineEditState) {\n        return line.type === 'manual';\n    }\n\n    showInfoComment(line: OrderLineEditState) {\n        return line.type === 'product' || line.type === 'manual';\n    }\n\n    fields(line: OrderLineEditState, onchange: () => void): ItemList {\n        const fields = new ItemList();\n\n        if (this.showInfoProduct(line)) {\n            fields.add('product', m('.Form-group', [\n                m('label', 'Product'),\n                m(ProductRelationshipSelect, {\n                    relationship: line.product,\n                    onchange: (product: Product | null) => {\n                        line.product = product;\n                        onchange();\n                    },\n                    hasOne: true,\n                }),\n            ]));\n        }\n\n        if (this.showInfoLabel(line)) {\n            fields.add('label', m('.Form-group', [\n                m('label', 'Label'),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: line.label,\n                    onchange: (event: Event) => {\n                        line.label = (event.target as HTMLInputElement).value;\n                        onchange();\n                    },\n                }),\n            ]));\n        }\n\n        if (this.showInfoComment(line)) {\n            fields.add('comment', m('.Form-group', [\n                m('label', 'Comment'),\n                m('textarea.FormControl', {\n                    value: line.comment,\n                    onchange: (event: Event) => {\n                        line.comment = (event.target as HTMLInputElement).value;\n                        onchange();\n                    },\n                }),\n            ]));\n        }\n\n        return fields;\n    }\n}\n","import AbstractRelationshipSelect from './AbstractRelationshipSelect';\nimport User from 'flarum/common/models/User';\nimport username from 'flarum/common/helpers/username';\nimport highlight from 'flarum/common/helpers/highlight';\nimport avatar from 'flarum/common/helpers/avatar';\n\nexport default class UserRelationshipSelect extends AbstractRelationshipSelect<User> {\n    protected resultsCache = new Map<string, User[]>();\n\n    className() {\n        return 'UserRelationshipSelect';\n    }\n\n    search(query: string) {\n        if (!query) {\n            m.redraw();\n            return Promise.resolve();\n        }\n\n        return app.store\n            .find('users', {\n                filter: {q: query},\n                page: {limit: 5},\n            })\n            .then((results) => {\n                this.resultsCache.set(query, results);\n                m.redraw();\n            });\n    }\n\n    results(query: string) {\n        if (!query) {\n            return [];\n        }\n\n        query = query.toLowerCase();\n\n        const results = this.resultsCache.get(query);\n\n        // Indicates still loading\n        if (typeof results === 'undefined') {\n            return null;\n        }\n\n        return (results || [])\n            .concat(\n                app.store\n                    .all('users')\n                    .filter((user) => [user.username(), user.displayName()].some((value) => value.toLowerCase().substr(0, query.length) === query))\n            )\n            .filter((e, i, arr) => arr.lastIndexOf(e) === i)\n            .sort((a, b) => a.displayName().localeCompare(b.displayName()));\n    }\n\n    item(user: User, query?: string) {\n        const name = username(user);\n\n        return [\n            avatar(user),\n            query ? {\n                // Re-build a Mithril text node into a tag node with highlight\n                ...name,\n                text: undefined,\n                children: [highlight(name.text as string, query)],\n            } : name,\n        ];\n    }\n}\n","import OrderLine from '../../common/models/OrderLine';\nimport Product from '../../common/models/Product';\nimport Model from 'flarum/common/Model';\n\nlet uniqueKey = 0;\n\nexport default class OrderLineEditState {\n    uniqueFormKey: string\n    line?: OrderLine\n    group: string | null = null\n    type: string | null = null\n    label: string = '';\n    comment: string = '';\n    quantity: number = 0\n    priceUnit: number = 0\n    priceTotal: number = 0\n    product: Product | null = null\n\n    constructor() {\n        // Used as the Mithril key for re-order operations\n        this.uniqueFormKey = ++uniqueKey + '';\n    }\n\n    init(line: OrderLine) {\n        this.line = line;\n        this.group = line.group() || null;\n        this.type = line.type() || null;\n        this.label = line.label() || '';\n        this.comment = line.comment() || '';\n        this.quantity = line.quantity() || 0;\n        this.priceUnit = line.priceUnit() || 0;\n        this.priceTotal = line.priceTotal() || 0;\n        this.product = line.product() || null;\n    }\n\n    updateTotal() {\n        this.priceTotal = this.quantity * this.priceUnit;\n    }\n\n    data(): any {\n        const data: any = {\n            attributes: {\n                group: this.group,\n                type: this.type,\n                label: this.label,\n                comment: this.comment,\n                quantity: this.quantity,\n                priceUnit: this.priceUnit,\n                // priceTotal intentionally not sent, it's computed again server-side\n            },\n            relationships: {\n                product: {\n                    data: Model.getIdentifier(this.product),\n                },\n            },\n        };\n\n        if (this.line) {\n            data.id = this.line.id();\n        }\n\n        return data;\n    }\n}\n","import {Vnode} from 'mithril';\nimport Modal from 'flarum/common/components/Modal';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport SubmitButton from './SubmitButton';\nimport PermanentDeleteButton from './PermanentDeleteButton';\nimport Payment from '../../common/models/Payment';\nimport PriceInput from '../../common/components/PriceInput';\n\ninterface EditPaymentModalAttrs {\n    payment?: Payment\n}\n\nexport default class EditPaymentModal extends Modal {\n    payment!: Payment\n    method: string = ''\n    identifier: string = ''\n    amount: number = 0\n    dirty: boolean = false\n\n    oninit(vnode: Vnode<EditPaymentModalAttrs, this>) {\n        super.oninit(vnode);\n\n        if (vnode.attrs.payment) {\n            this.payment = vnode.attrs.payment;\n            this.method = this.payment.method() || '';\n            this.identifier = this.payment.identifier() || '';\n            this.amount = this.payment.amount() || 0;\n        } else {\n            // TODO: order relationship\n            this.payment = app.store.createRecord('flamarkt-payments');\n        }\n    }\n\n    content() {\n        return m('.Modal-body', this.fields().toArray());\n    }\n\n    fields(): ItemList {\n        const fields = new ItemList();\n\n        fields.add('method', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.payments.field.method')),\n            m('input.FormControl', {\n                type: 'text',\n                value: this.method,\n                oninput: (event: Event) => {\n                    this.method = (event.target as HTMLInputElement).value;\n                    this.dirty = true;\n                },\n                disabled: this.loading,\n            }),\n        ]), 30);\n\n        fields.add('identifier', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.payments.field.identifier')),\n            m('input.FormControl', {\n                type: 'text',\n                value: this.identifier,\n                oninput: (event: Event) => {\n                    this.identifier = (event.target as HTMLInputElement).value;\n                    this.dirty = true;\n                },\n                disabled: this.loading,\n            }),\n        ]), 20);\n\n        fields.add('amount', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.payments.field.amount')),\n            m(PriceInput, {\n                value: this.amount,\n                onchange: (value: number) => {\n                    this.amount = value;\n                    this.dirty = true;\n                },\n                disabled: this.loading,\n            }),\n        ]), 10);\n\n        fields.add('submit', m('.Form-group', [\n            SubmitButton.component({\n                loading: this.loading,\n                dirty: this.dirty,\n                exists: this.payment.exists,\n            }),\n            ' ',\n            PermanentDeleteButton.component({\n                model: this.payment,\n                afterdelete() {\n                    // TODO: refresh order state\n                    app.modal.close();\n                },\n            }),\n        ]), -10);\n\n        return fields;\n    }\n\n    data() {\n        return {\n            method: this.method || null,\n            identifier: this.identifier || null,\n            amount: this.amount,\n        };\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.loading = true;\n\n        this.payment.save(this.data()).then(payment => {\n            this.payment = payment;\n            this.dirty = false;\n            this.loading = false;\n            m.redraw();\n        }, this.loaded.bind(this));\n    }\n}\n","import Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport PriceLabel from '../../common/components/PriceLabel';\nimport Payment from '../../common/models/Payment';\nimport AbstractList from './AbstractList';\nimport EditPaymentModal from './EditPaymentModal';\n\nexport default class PaymentList extends AbstractList<Payment> {\n    head() {\n        const columns = super.head();\n\n        columns.add('date', m('th', app.translator.trans('flamarkt-core.backoffice.payments.head.date')), 40);\n        columns.add('method', m('th', app.translator.trans('flamarkt-core.backoffice.payments.head.method')), 30);\n        columns.add('identifier', m('th', app.translator.trans('flamarkt-core.backoffice.payments.head.identifier')), 20);\n        columns.add('amount', m('th', app.translator.trans('flamarkt-core.backoffice.payments.head.amount')), 10);\n\n        return columns;\n    }\n\n    columns(payment: Payment) {\n        const columns = super.columns(payment);\n\n        columns.add('date', m('td', humanTime(payment.createdAt())), 40);\n        columns.add('method', m('td', payment.method()), 30);\n        columns.add('identifier', m('td', payment.identifier()), 20);\n        columns.add('amount', m('td', m(PriceLabel, {\n            value: payment.amount(),\n        })), 10);\n\n        return columns;\n    }\n\n    actions(payment: Payment) {\n        const actions = super.actions(payment);\n\n        actions.add('edit', Button.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-pen',\n            onclick() {\n                app.modal.show(EditPaymentModal, {\n                    payment,\n                });\n            },\n        }));\n\n        return actions;\n    }\n}\n","import AbstractListState, {Page} from '../../common/states/AbstractListState';\nimport Payment from '../../common/models/Payment';\nimport Order from '../../common/models/Order';\n\n/**\n * Allows using a List component with the relationship from the order object\n */\nexport default class PaymentListPassthroughState extends AbstractListState<Payment> {\n    type() {\n        return 'flamarkt-payments';\n    }\n\n    constructor(order: Order) {\n        super();\n\n        this.loading = false;\n        this.pages = [\n            new Page<Payment>(1, order.payments() || []),\n        ];\n    }\n}\n","import {Vnode} from 'mithril';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport User from 'flarum/common/models/User';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport AbstractShowPage from '../../common/pages/AbstractShowPage';\nimport Order from '../../common/models/Order';\nimport OrderLine from '../../common/models/OrderLine';\nimport Sortable from '../../common/components/Sortable';\nimport OrderLineEdit from '../components/OrderLineEdit';\nimport SubmitButton from '../components/SubmitButton';\nimport UserRelationshipSelect from '../components/UserRelationshipSelect';\nimport OrderLineEditState from '../states/OrderLineEditState';\nimport SoftDeleteButton from '../components/SoftDeleteButton';\nimport PermanentDeleteButton from '../components/PermanentDeleteButton';\nimport PaymentList from '../components/PaymentList';\nimport PaymentListPassthroughState from '../states/PaymentListPassthroughState';\n\nexport default class OrderShowPage extends AbstractShowPage {\n    order: Order | null = null;\n    user: User | null = null;\n    lines: OrderLineEditState[] = [];\n    saving: boolean = false;\n    dirty: boolean = false;\n    newLine!: OrderLineEditState;\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.initNewLine();\n    }\n\n    initNewLine() {\n        this.newLine = new OrderLineEditState();\n    }\n\n    initLineState(line: OrderLine): OrderLineEditState {\n        const state = new OrderLineEditState();\n        state.init(line);\n        return state;\n    }\n\n    newRecord() {\n        return app.store.createRecord('flamarkt-orders');\n    }\n\n    findType() {\n        return 'flamarkt/orders';\n    }\n\n    show(order: Order) {\n        this.order = order;\n        this.user = order.user() || null;\n        this.lines = (order.lines() || []).map(this.initLineState);\n\n        //app.setTitle(order.title());\n        app.setTitleCount(0);\n    }\n\n    view() {\n        if (!this.order) {\n            return LoadingIndicator.component();\n        }\n\n        return m('form.OrderShowPage', {\n            onsubmit: this.onsubmit.bind(this),\n        }, m('.container.container--narrow', this.fields().toArray()));\n    }\n\n    fields(): ItemList {\n        const fields = new ItemList();\n\n        fields.add('number', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.orders.field.number')),\n            m('input.FormControl', {\n                value: this.order!.number(),\n                readonly: true,\n            })\n        ]), 30);\n\n        fields.add('user', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.orders.field.user')),\n            m(UserRelationshipSelect, {\n                relationship: this.user,\n                onchange: (user: User | null) => {\n                    this.user = user;\n                    this.dirty = true;\n                },\n                hasOne: true,\n            }),\n        ]), 20);\n\n        fields.add('lines', m('table.OrderComposerTable', [\n            m('thead', m('tr', this.tableHead().toArray())),\n            m(Sortable, {\n                containerTag: 'tbody',\n                placeholderTag: 'tr',\n                onsort: (origin, destination) => {\n                    this.lines.splice(destination, 0, ...this.lines.splice(origin, 1));\n                    this.dirty = true;\n                },\n            }, this.lines.map((line, index) => m(OrderLineEdit, {\n                key: line.uniqueFormKey,\n                line,\n                sortable: true,\n                control: Button.component({\n                    icon: 'fas fa-times',\n                    className: 'Button Button--icon Button--delete',\n                    onclick: () => {\n                        this.lines.splice(index, 1);\n                        this.dirty = true;\n                    },\n                    title: app.translator.trans('flamarkt-core.backoffice.orders.lines.control.delete'),\n                }),\n                onchange: () => {\n                    this.dirty = true;\n                },\n            }))),\n            m('tbody', m(OrderLineEdit, {\n                key: 'new',\n                line: this.newLine,\n                control: Button.component({\n                    icon: 'fas fa-plus',\n                    className: 'Button Button--icon',\n                    onclick: () => {\n                        //TODO: use onupdate on the edit line\n                        this.lines.push(this.newLine);\n                        this.dirty = true;\n\n                        this.initNewLine();\n                    },\n                    title: app.translator.trans('flamarkt-core.backoffice.orders.lines.control.add'),\n                }),\n                onchange: () => {\n                    this.dirty = true;\n                },\n            })),\n        ]), 10);\n\n        fields.add('submit', m('.Form-group', [\n            SubmitButton.component({\n                loading: this.saving,\n                dirty: this.dirty,\n                exists: this.order!.exists,\n            }),\n            ' ',\n            SoftDeleteButton.component({\n                model: this.order,\n            }),\n            ' ',\n            PermanentDeleteButton.component({\n                model: this.order,\n                afterdelete() {\n                    m.route.set(app.route('orders.index'));\n                },\n            }),\n        ]), -10);\n\n        fields.add('payments', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.payments.title')),\n            m(PaymentList, {\n                state: new PaymentListPassthroughState(this.order!),\n            }),\n        ]), -20);\n\n        return fields;\n    }\n\n    tableHead() {\n        const columns = new ItemList();\n\n        columns.add('handle', m('th'), 100);\n        columns.add('group', m('th', app.translator.trans('flamarkt-core.backoffice.orders.lines.head.group')), 90);\n        columns.add('type', m('th', app.translator.trans('flamarkt-core.backoffice.orders.lines.head.type')), 80);\n        columns.add('info', m('th', app.translator.trans('flamarkt-core.backoffice.orders.lines.head.info')), 30);\n        columns.add('priceUnit', m('th', app.translator.trans('flamarkt-core.backoffice.orders.lines.head.priceUnit')), -30);\n        columns.add('quantity', m('th', app.translator.trans('flamarkt-core.backoffice.orders.lines.head.quantity')), -60);\n        columns.add('priceTotal', m('th', app.translator.trans('flamarkt-core.backoffice.orders.lines.head.priceTotal')), -90);\n        columns.add('control', m('th'), -100);\n\n        return columns;\n    }\n\n    data() {\n        return {\n            relationships: {\n                lines: this.lines.map(line => {\n                    return {\n                        verbatim: true,\n                        type: 'flamarkt-product-lines',\n                        ...line.data(),\n                    };\n                }),\n                user: this.user,\n            },\n        };\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.saving = true;\n\n        this.saveThroughNewRecord<Order>(this.order?.id(), this.data()).then(order => {\n            this.order = order;\n\n            this.saving = false;\n            this.dirty = false;\n            m.redraw();\n\n            m.route.set(app.route.order(order));\n        }).catch(error => {\n            this.saving = false;\n            m.redraw();\n        });\n    }\n}\n","import AbstractListState from '../../common/states/AbstractListState';\nimport User from 'flarum/common/models/User';\n\nexport default class UserListState extends AbstractListState<User> {\n    type() {\n        return 'users';\n    }\n}\n","import LinkButton from 'flarum/common/components/LinkButton';\nimport AbstractList from './AbstractList';\nimport User from 'flarum/common/models/User';\nimport Link from 'flarum/common/components/Link';\n\nexport default class UserList extends AbstractList<User> {\n    head() {\n        const columns = super.head();\n\n        columns.add('email', m('th', app.translator.trans('flamarkt-core.backoffice.users.head.email')), 10);\n        columns.add('orders', m('th', app.translator.trans('flamarkt-core.backoffice.users.head.orders')), 10);\n\n        return columns;\n    }\n\n    columns(user: User) {\n        const columns = super.columns(user);\n\n        columns.add('email', m('td', user.email()), 10);\n        columns.add('orders', m('td', m(Link, {\n            href: app.route('orders.index') + '?' + m.buildQueryString({\n                user: user.slug(),\n            }),\n        }, user.flamarktOrderCount())), 10);\n\n        return columns;\n    }\n\n    actions(user: User) {\n        const actions = super.actions(user);\n\n        actions.add('edit', LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-pen',\n            href: app.route.user(user),\n        }));\n\n        return actions;\n    }\n}\n","import AbstractSortDropdown, {SortDropdownAttrs, SortOptions} from '../../common/components/AbstractSortDropdown';\nimport UserListState from '../states/UserListState';\n\nexport interface UserSortDropdownAttrs extends SortDropdownAttrs {\n    state: UserListState\n}\n\nexport default class UserSortDropdown extends AbstractSortDropdown<UserSortDropdownAttrs> {\n    className(): string {\n        return 'UserSortDropdown';\n    }\n\n    options(): SortOptions {\n        return {\n            'default': 'Default sort',\n            '-joinedAt': 'Newest',\n            'joinedAt': 'Oldest',\n            '-lastSeenAt': 'Seen recently',\n            'lastSeenAt': 'Seen least recently',\n            'username': 'Username ASC',\n            '-username': 'Username DESC',\n            'commentCount': 'Comment count ASC',\n            '-commentCount': 'Comment count DESC',\n            'discussionCount': 'Discussion count ASC',\n            '-discussionCount': 'Discussion count DESC',\n        };\n    }\n}\n","import {Vnode} from 'mithril';\nimport Page from 'flarum/common/components/Page';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserListState from '../states/UserListState';\nimport UserList from '../components/UserList';\nimport UserSortDropdown from '../components/UserSortDropdown';\n\nexport default class UserIndexPage extends Page {\n    state!: UserListState;\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.state = this.initState();\n        this.state.refresh();\n\n        app.setTitle(app.translator.trans('flamarkt-core.backoffice.users.title'));\n        app.setTitleCount(0);\n    }\n\n    initState() {\n        const params = m.route.param();\n\n        return new UserListState({\n            sort: params.sort,\n        });\n    }\n\n    view() {\n        return m('.UserIndexPage', m('.container', [\n            m('.Form-group', [\n                LinkButton.component({\n                    className: 'Button',\n                    href: app.route('users.show', {\n                        id: 'new',\n                    }),\n                }, app.translator.trans('flamarkt-core.backoffice.users.new')),\n                m(UserSortDropdown, {\n                    state: this.state,\n                }),\n            ]),\n            m(UserList, {\n                state: this.state,\n            }),\n        ]));\n    }\n}\n","import LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport AbstractShowPage from '../../common/pages/AbstractShowPage';\nimport User from 'flarum/common/models/User';\nimport SubmitButton from '../components/SubmitButton';\nimport ItemList from 'flarum/common/utils/ItemList';\n\nexport default class UserShowPage extends AbstractShowPage {\n    user: User | null = null;\n    saving: boolean = false;\n    dirty: boolean = false;\n    username: string = '';\n    password: string = '';\n    email: string = '';\n\n    newRecord() {\n        return app.store.createRecord('users', {\n            // Same as product, we need to initialize the attributes to prevent errors\n            // flamarkt/identity will read user.attribute()\n            attributes: {},\n        });\n    }\n\n    findType() {\n        return 'users';\n    }\n\n    show(user: User) {\n        this.user = user;\n        this.username = user.username() || '';\n        this.email = user.email() || '';\n\n        // @ts-ignore\n        app.setTitle(user.email());\n        app.setTitleCount(0);\n    }\n\n    view() {\n        if (!this.user) {\n            return LoadingIndicator.component();\n        }\n\n        return m('form.UserShowPage', {\n            onsubmit: this.onsubmit.bind(this),\n        }, m('.container.container--narrow', this.fields().toArray()));\n    }\n\n    fields(): ItemList {\n        const fields = new ItemList();\n\n        fields.add('username', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.users.field.username')),\n            m('input.FormControl', {\n                type: 'text',\n                value: this.username,\n                oninput: (event: Event) => {\n                    this.username = (event.target as HTMLInputElement).value;\n                    this.dirty = true;\n                },\n                disabled: this.saving,\n            }),\n        ]));\n\n        fields.add('email', m('.Form-group', [\n            m('label', app.translator.trans('flamarkt-core.backoffice.users.field.email')),\n            m('input.FormControl', {\n                type: 'email',\n                value: this.email,\n                oninput: (event: Event) => {\n                    this.email = (event.target as HTMLInputElement).value;\n                    this.dirty = true;\n                },\n                // Disable field if own user, because Flarum won't allow editing it without passing meta.password\n                disabled: this.saving || app.session.user === this.user,\n            }),\n        ]));\n\n        // We need to show password field for new users because Flarum requires password in REST API\n        if (!this.user!.exists) {\n            fields.add('password', m('.Form-group', [\n                m('label', app.translator.trans('flamarkt-core.backoffice.users.field.password')),\n                m('input.FormControl', {\n                    type: 'password',\n                    value: this.password,\n                    oninput: (event: Event) => {\n                        this.password = (event.target as HTMLInputElement).value;\n                        this.dirty = true;\n                    },\n                    disabled: this.saving,\n                }),\n            ]));\n        }\n\n        fields.add('submit', m('.Form-group', [\n            SubmitButton.component({\n                loading: this.saving,\n                dirty: this.dirty,\n                exists: this.user!.exists,\n            }),\n        ]), -10);\n\n        return fields;\n    }\n\n    data() {\n        const data: any = {\n            username: this.username,\n        };\n\n        // Only include email if it was modified\n        // This avoids issues with Flarum asking for password during email change\n        if (this.email !== this.user!.email()) {\n            data.email = this.email;\n        }\n\n        if (this.password) {\n            data.password = this.password;\n        }\n\n        return data;\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.saving = true;\n\n        this.user!.save(this.data()).then(user => {\n            this.user = user;\n\n            this.saving = false;\n            this.dirty = false;\n            m.redraw();\n\n            m.route.set(app.route.user(user));\n        }).catch(error => {\n            this.saving = false;\n            m.redraw();\n        });\n    }\n}\n","import DefaultResolver from 'flarum/common/resolvers/DefaultResolver';\n\n/**\n * Same as Flarum's own ExtensionPageResolver but we need to copy it because it's not exported\n */\nexport default class ExtensionPageResolver extends DefaultResolver {\n    static extension: string | null = null;\n\n    onmatch(args, requestedPath, route) {\n        const extensionPage = app.extensionData.getPage(args.id);\n\n        if (extensionPage) {\n            return extensionPage;\n        }\n\n        return super.onmatch(args, requestedPath, route);\n    }\n}\n","import DashboardPage from './pages/DashboardPage';\nimport ProductIndexPage from './pages/ProductIndexPage';\nimport ProductShowPage from './pages/ProductShowPage';\nimport OrderIndexPage from './pages/OrderIndexPage';\nimport OrderShowPage from './pages/OrderShowPage';\nimport UserIndexPage from './pages/UserIndexPage';\nimport UserShowPage from './pages/UserShowPage';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport ExtensionPageResolver from './resolvers/ExtensionPageResolver';\nimport Product from '../common/models/Product';\nimport User from 'flarum/common/models/User';\nimport Order from '../common/models/Order';\n\nexport default function (app) {\n    app.routes = {\n        dashboard: {path: '/dashboard', component: DashboardPage},\n        'products.index': {path: '/products', component: ProductIndexPage},\n        'products.show': {path: '/products/:id', component: ProductShowPage},\n        'orders.index': {path: '/orders', component: OrderIndexPage},\n        'orders.show': {path: '/orders/:id', component: OrderShowPage},\n        'users.index': {path: '/users', component: UserIndexPage},\n        'users.show': {path: '/users/:id', component: UserShowPage},\n        extension: {path: '/extension/:id', component: ExtensionPage, resolverClass: ExtensionPageResolver},\n    };\n\n    app.route.product = (product: Product) => {\n        return app.route('products.show', {\n            id: product.id(),\n        });\n    };\n    app.route.user = (user: User) => {\n        return app.route('users.show', {\n            id: user.id(),\n        });\n    };\n    app.route.order = (order: Order) => {\n        return app.route('orders.show', {\n            id: order.id(),\n        });\n    };\n}\n","import Application from 'flarum/common/Application';\nimport Navigation from 'flarum/common/components/Navigation';\nimport HeaderPrimary from './components/HeaderPrimary';\nimport HeaderSecondary from './components/HeaderSecondary';\nimport BackofficeNav from './components/BackofficeNav';\nimport routes from './routes';\nimport History from 'flarum/forum/utils/History';\nimport ExtensionData from 'flarum/admin/utils/ExtensionData';\nimport AdminApplication from 'flarum/admin/AdminApplication';\n\nexport default class BackofficeApplication extends Application {\n    extensionData = new ExtensionData();\n\n    history = {\n        canGoBack: () => true,\n        getPrevious: () => {\n        },\n        backUrl: () => this.forum.attribute('baseUrl'),\n        back: function () {\n            window.location = this.backUrl();\n        },\n    };\n\n    //history = new History();\n\n    constructor() {\n        super();\n\n        routes(this);\n    }\n\n    mount() {\n        const defaultRoute = this.forum.attribute('defaultRoute');\n        let defaultAction = 'dashboard';\n\n        for (const i in this.routes) {\n            if (this.routes[i].path === defaultRoute) defaultAction = i;\n        }\n\n        this.routes[defaultAction].path = '/';\n        //this.history.push(defaultAction, this.translator.trans('core.forum.header.back_to_index_tooltip'), '/');\n\n        m.route.prefix = '/backoffice';\n        super.mount(this.forum.attribute('basePath'));\n\n        m.mount(document.getElementById('app-navigation'), {\n            view: () =>\n                Navigation.component({\n                    className: 'App-backControl',\n                    drawer: true,\n                }),\n        });\n        m.mount(document.getElementById('header-navigation'), Navigation);\n        m.mount(document.getElementById('header-primary'), HeaderPrimary);\n        m.mount(document.getElementById('header-secondary'), HeaderSecondary);\n        m.mount(document.getElementById('admin-navigation'), BackofficeNav);\n    }\n\n    getRequiredPermissions(permission) {\n        return AdminApplication.prototype.getRequiredPermissions.call(this, permission);\n    }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import OriginalModel from 'flarum/common/Model';\n\n/**\n * A class to apply the correct typings to the static method since there's no other way\n * @see https://github.com/microsoft/TypeScript/issues/36146\n */\n// @ts-ignore\nexport default class Model extends OriginalModel {\n    static attribute<T = any>(name: string, transform?: Function): (value?: string) => T | undefined {\n        return OriginalModel.attribute(name, transform);\n    }\n\n    static hasOne<T extends OriginalModel = OriginalModel>(name: string): () => T | false | undefined {\n        return OriginalModel.hasOne(name) as any;\n    }\n\n    static hasMany<T extends OriginalModel = OriginalModel>(name: string): () => T[] | false {\n        return OriginalModel.hasMany(name);\n    }\n}\n","import Model from './Model';\nimport User from 'flarum/common/models/User';\nimport OrderLine from './OrderLine';\n\nexport default class Order extends Model {\n    number = Model.attribute('number');\n    slug = Model.attribute('slug');\n    productCount = Model.attribute('productCount');\n    priceTotal = Model.attribute('priceTotal');\n    paidAmount = Model.attribute('paidAmount');\n    createdAt = Model.attribute('createdAt', Model.transformDate);\n    isHidden = Model.attribute<boolean>('isHidden');\n\n    user = Model.hasOne<User>('user');\n    lines = Model.hasMany<OrderLine>('lines');\n    payments = Model.hasMany('payments');\n\n    apiEndpoint() {\n        return '/flamarkt/orders' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import Model from './Model';\nimport Product from './Product';\n\nexport default class OrderLine extends Model {\n    number = Model.attribute<number>('number');\n    group = Model.attribute<string | null>('group');\n    type = Model.attribute<string | null>('type');\n    label = Model.attribute<string | null>('label');\n    comment = Model.attribute<string | null>('comment');\n    quantity = Model.attribute<number | null>('quantity');\n    priceUnit = Model.attribute<number | null>('priceUnit');\n    priceTotal = Model.attribute<number | null>('priceTotal');\n\n    product = Model.hasOne<Product>('product');\n}\n","import Model from './Model';\n\nexport default class Payment extends Model {\n    method = Model.attribute<string | null>('method');\n    identifier = Model.attribute<string | null>('identifier');\n    amount = Model.attribute<number | null>('amount');\n    createdAt = Model.attribute('createdAt', Model.transformDate);\n    isHidden = Model.attribute<boolean>('isHidden');\n\n    apiEndpoint() {\n        return '/flamarkt/payments' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import Model from './Model';\n\nexport default class Product extends Model {\n    title = Model.attribute<string>('title');\n    slug = Model.attribute('slug');\n    description = Model.attribute<string | null>('description');\n    descriptionHtml = Model.attribute<string | null>('descriptionHtml');\n    price = Model.attribute<number | null>('price');\n    priceEdit = Model.attribute<number | null>('priceEdit');\n    cartQuantity = Model.attribute<number | null>('cartQuantity');\n    isHidden = Model.attribute<boolean>('isHidden');\n    canOrder = Model.attribute<number | null>('canOrder');\n    canEdit = Model.attribute<number | null>('canEdit');\n\n    cartPriceTotalLocal(): number {\n        if (!this.price || !this.cartQuantity) {\n            return 0;\n        }\n\n        // @ts-ignore Wrong Model.attribute typings\n        return this.price() * this.cartQuantity();\n    }\n\n    apiEndpoint() {\n        return '/flamarkt/products' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import AbstractSortDropdown from './components/AbstractSortDropdown';\nimport ActiveLinkButton from './components/ActiveLinkButton';\nimport DecimalInput from './components/DecimalInput';\nimport DecimalLabel from './components/DecimalLabel';\nimport OrderSortDropdown from './components/OrderSortDropdown';\nimport PriceInput from './components/PriceInput';\nimport PriceLabel from './components/PriceLabel';\nimport ProductSortDropdown from './components/ProductSortDropdown';\nimport QuantityInput from './components/QuantityInput';\nimport QuantityLabel from './components/QuantityLabel';\nimport Sortable from './components/Sortable';\nimport SortableHandle from './components/SortableHandle';\nimport formatPrice from './helpers/formatPrice';\nimport Cart from './models/Cart';\nimport Order from './models/Order';\nimport OrderLine from './models/OrderLine';\nimport Payment from './models/Payment';\nimport Product from './models/Product';\nimport AbstractShowPage from './pages/AbstractShowPage';\nimport AbstractListState from './states/AbstractListState';\nimport OrderListState from './states/OrderListState';\nimport ProductListState from './states/ProductListState';\nimport KeyboardNavigatable from './utils/KeyboardNavigatable';\n\nexport const common = {\n    'components/AbstractSortDropdown': AbstractSortDropdown,\n    'components/ActiveLinkButton': ActiveLinkButton,\n    'components/DecimalInput': DecimalInput,\n    'components/DecimalLabel': DecimalLabel,\n    'components/OrderSortDropdown': OrderSortDropdown,\n    'components/PriceInput': PriceInput,\n    'components/PriceLabel': PriceLabel,\n    'components/ProductSortDropdown': ProductSortDropdown,\n    'components/QuantityInput': QuantityInput,\n    'components/QuantityLabel': QuantityLabel,\n    'components/Sortable': Sortable,\n    'components/SortableHandle': SortableHandle,\n    'helpers/formatPrice': formatPrice,\n    'models/Cart': Cart,\n    'models/Order': Order,\n    'models/OrderLine': OrderLine,\n    'models/Payment': Payment,\n    'models/Product': Product,\n    'pages/AbstractShowPage': AbstractShowPage,\n    'states/AbstractListState': AbstractListState,\n    'states/OrderListState': OrderListState,\n    'states/ProductListState': ProductListState,\n    'utils/KeyboardNavigatable': KeyboardNavigatable,\n}\n","import DecimalLabel from './DecimalLabel';\n\nexport default class QuantityLabel extends DecimalLabel {\n    //\n}\n","/**\n * @deprecated replaced with PriceLabel\n */\nexport default function (price: any) {\n    // Keep price as-it if not a number, this allows passing vdom or hard-coded string\n    if (price === parseInt(price)) {\n        price = (price / Math.pow(10, app.forum.attribute('priceDecimals'))).toFixed(app.forum.attribute('priceDecimals'));\n    }\n\n    return [price, ' ' + app.forum.attribute('priceUnit')];\n}\n","import Model from './Model';\nimport Product from './Product';\n\nexport default class Cart extends Model {\n    productCount = Model.attribute<number>('productCount');\n    priceTotal = Model.attribute<number>('priceTotal');\n\n    products = Model.hasMany<Product>('products');\n\n    priceTotalLocal(): number {\n        return (this.products() || []).reduce((total, product) => total + product.cartPriceTotalLocal(), 0);\n    }\n\n    apiEndpoint() {\n        return '/flamarkt/carts' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import AbstractList from './components/AbstractList';\nimport AbstractRelationshipSelect from './components/AbstractRelationshipSelect';\nimport BackofficeNav from './components/BackofficeNav';\nimport OrderLineEdit from './components/OrderLineEdit';\nimport OrderList from './components/OrderList';\nimport OrderRelationshipSelect from './components/OrderRelationshipSelect';\nimport PermanentDeleteButton from './components/PermanentDeleteButton';\nimport ProductList from './components/ProductList';\nimport ProductRelationshipSelect from './components/ProductRelationshipSelect';\nimport SoftDeleteButton from './components/SoftDeleteButton';\nimport SubmitButton from './components/SubmitButton';\nimport UserList from './components/UserList';\nimport UserRelationshipSelect from './components/UserRelationshipSelect';\nimport UserSortDropdown from './components/UserSortDropdown';\nimport DashboardPage from './pages/DashboardPage';\nimport OrderIndexPage from './pages/OrderIndexPage';\nimport OrderShowPage from './pages/OrderShowPage';\nimport ProductIndexPage from './pages/ProductIndexPage';\nimport ProductShowPage from './pages/ProductShowPage';\nimport UserIndexPage from './pages/UserIndexPage';\nimport UserShowPage from './pages/UserShowPage';\nimport OrderLineEditState from './states/OrderLineEditState';\nimport UserListState from './states/UserListState';\n\nexport const backoffice = {\n    'components/AbstractList': AbstractList,\n    'components/AbstractRelationshipSelect': AbstractRelationshipSelect,\n    'components/BackofficeNav': BackofficeNav,\n    'components/OrderLineEdit': OrderLineEdit,\n    'components/OrderList': OrderList,\n    'components/OrderRelationshipSelect': OrderRelationshipSelect,\n    'components/PermanentDeleteButton': PermanentDeleteButton,\n    'components/ProductList': ProductList,\n    'components/ProductRelationshipSelect': ProductRelationshipSelect,\n    'components/SoftDeleteButton': SoftDeleteButton,\n    'components/SubmitButton': SubmitButton,\n    'components/UserList': UserList,\n    'components/UserRelationshipSelect': UserRelationshipSelect,\n    'components/UserSortDropdown': UserSortDropdown,\n    'pages/DashboardPage': DashboardPage,\n    'pages/OrderIndexPage': OrderIndexPage,\n    'pages/OrderShowPage': OrderShowPage,\n    'pages/ProductIndexPage': ProductIndexPage,\n    'pages/ProductShowPage': ProductShowPage,\n    'pages/UserIndexPage': UserIndexPage,\n    'pages/UserShowPage': UserShowPage,\n    'states/OrderLineEditState': OrderLineEditState,\n    'states/UserListState': UserListState,\n}\n","import AbstractRelationshipSelect from './AbstractRelationshipSelect';\nimport highlight from 'flarum/common/helpers/highlight';\nimport Order from '../../common/models/Order';\n\nexport default class OrderRelationshipSelect extends AbstractRelationshipSelect<Order> {\n    protected resultsCache = new Map<string, Order[]>();\n\n    search(query: string) {\n        if (!query) {\n            m.redraw();\n            return Promise.resolve();\n        }\n\n        return app.store\n            .find('flamarkt/orders', {\n                filter: {q: query},\n                page: {limit: 5},\n            })\n            .then((results) => {\n                this.resultsCache.set(query, results);\n                m.redraw();\n            });\n    }\n\n    results(query: string) {\n        if (!query) {\n            return [];\n        }\n\n        query = query.toLowerCase();\n\n        const results = this.resultsCache.get(query);\n\n        // Indicates still loading\n        if (typeof results === 'undefined') {\n            return null;\n        }\n\n        return results || [];\n    }\n\n    item(order: Order, query?: string) {\n        return [\n            query ? highlight(order.number(), query) : order.number(),\n        ];\n    }\n}\n","import Model from 'flarum/common/Model';\nimport BackofficeApplication from './BackofficeApplication';\nimport Order from '../common/models/Order';\nimport OrderLine from '../common/models/OrderLine';\nimport Payment from '../common/models/Payment';\nimport Product from '../common/models/Product';\nimport {common} from '../common/compat';\nimport {backoffice} from './compat';\nimport patchModelHasOneNull from '../common/patchModelHasOneNull';\nimport patchStoreAllowVerbatimRelationships from '../common/patchStoreAllowVerbatimRelationships';\nimport registerSettings from './registerSettings';\nimport hideSettingsAndPermissionsIfNotAdmin from './hideSettingsAndPermissionsIfNotAdmin';\n\n// The original AdminApplication still gets created, but we override it here\n// The boot method of the original will never be called\n// @ts-ignore\nconst app = new BackofficeApplication();\n\n// @ts-ignore\nwindow.app = app;\n\nexport {\n    app,\n    common,\n    backoffice,\n};\n\n// TODO: override in Flarum compat object?\n\napp.initializers.add('flamarkt-core', () => {\n    app.store.models['flamarkt-orders'] = Order;\n    app.store.models['flamarkt-order-lines'] = OrderLine;\n    app.store.models['flamarkt-payments'] = Payment;\n    app.store.models['flamarkt-products'] = Product;\n    app.store.models.users.prototype.flamarktOrderCount = Model.attribute('flamarktOrderCount');\n\n    registerSettings();\n    hideSettingsAndPermissionsIfNotAdmin();\n});\n\n// On one hand these need to run as early as possible because they need to override Model.hasOne which is used in other extension's extenders\n// But priority might need to be adjusted because it need to run as late as possible for the null catch to be the most outward override and therefore runs before other overrides\napp.initializers.add('flamarkt-core-patch', () => {\n    patchModelHasOneNull();\n    patchStoreAllowVerbatimRelationships();\n}, 100);\n","import ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Select from 'flarum/common/components/Select';\n\nexport default function () {\n    app.extensionData.for('flamarkt-core')\n        .registerSetting(function (this: ExtensionPage) {\n            const options: any = {};\n\n            (app.forum.attribute('flamarktAvailabilityDrivers') as string[] || []).forEach(driver => {\n                options[driver] = driver;\n            });\n\n            return m('.Form-group', [\n                m('label', app.translator.trans('flamarkt-core.backoffice.settings.defaultAvailabilityDriver')),\n                Select.component({\n                    value: this.setting('flamarkt.defaultAvailabilityDriver')() || 'never',\n                    options,\n                    onchange: this.setting('flamarkt.defaultAvailabilityDriver'),\n                }),\n            ]);\n        })\n        .registerSetting(function (this: ExtensionPage) {\n            const options: any = {};\n\n            (app.forum.attribute('flamarktPriceDrivers') as string[] || []).forEach(driver => {\n                options[driver] = driver;\n            });\n\n            return m('.Form-group', [\n                m('label', app.translator.trans('flamarkt-core.backoffice.settings.defaultPriceDriver')),\n                Select.component({\n                    value: this.setting('flamarkt.defaultPriceDriver')() || 'fixed',\n                    options,\n                    onchange: this.setting('flamarkt.defaultPriceDriver'),\n                }),\n            ]);\n        })\n        .registerSetting({\n            type: 'switch',\n            setting: 'flamarkt.forceOrderPrepayment',\n            label: app.translator.trans('flamarkt-core.backoffice.settings.forceOrderPrepayment'),\n        })\n        .registerPermission({\n            icon: 'fas fa-shopping-cart',\n            label: app.translator.trans('flamarkt-core.backoffice.permissions.shop'),\n            permission: 'flamarkt.shop',\n            allowGuest: true,\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-wrench',\n            label: app.translator.trans('flamarkt-core.backoffice.permissions.backoffice'),\n            permission: 'backoffice', // Intentionally not namespaced\n        }, 'moderate');\n}\n","import {override} from 'flarum/common/extend';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\n\nexport default function () {\n    override(ExtensionPage.prototype, 'content', function (this: ExtensionPage, original: any) {\n        // If the user has admin access, show as normal\n        if (app.forum.attribute('adminUrl')) {\n            return original();\n        }\n\n        const settings = app.extensionData.getSettings(this.extension.id);\n\n        // If there are no settings, show as normal\n        if (!settings) {\n            return original();\n        }\n\n        // Show a special message so the user isn't confused why they don't see or can't edit the values\n        return m('.ExtensionPage-settings', m('.container', m('h3.ExtensionPage-subHeader', app.translator.trans('flamarkt-core.backoffice.settingsNotAvailableForNonAdmin'))));\n    });\n}\n","import {override} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\n\n/**\n * Fixes inability to use null hasOne relationships with Flarum javascript models\n * @see https://github.com/flarum/core/issues/2876\n */\nexport default function () {\n    // Allow passing null relationships in Model.prototype.save()\n    override(Model, 'getIdentifier', function (original: (model: Model) => any, model: Model | any) {\n        if (!model) {\n            return null;\n        }\n\n        return original(model);\n    });\n\n    // Don't error if the data property exists on the relationship but is null\n    // null is allowed as per https://jsonapi.org/format/#document-resource-object-linkage\n    override(Model, 'hasOne', function (original: (name: string) => (() => any), name: string) {\n        return function (this: Model) {\n            if (this.data.relationships) {\n                const relationship = this.data.relationships[name];\n\n                if (relationship && !relationship.data) {\n                    // Flarum might use false here. The code only looks for falsy for now anyway\n                    return null;\n                }\n            }\n\n            return original(name).call(this);\n        };\n    });\n}\n","import {override} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\n\n/**\n * The way Flarum parses relationships inside of the save() method prevents us from saving data alongside the relation\n * To work around this, we override this method that will allow us to pass down raw objects directly in the model during save\n * The same code is used in fof/taxonomies\n */\nexport default function () {\n    override(Model, 'getIdentifier', function (original: (model: Model) => any, model: Model | any) {\n        // This is fixed by patchModelHasOneNull but we need to handle it here as well depending on the load order\n        if (!model) {\n            return null;\n        }\n\n        if (model.verbatim) {\n            delete model.verbatim;\n\n            return model;\n        }\n\n        return original(model);\n    });\n}\n"],"sourceRoot":""}